{"version":3,"file":"static/js/925.7c0be569.chunk.js","mappings":"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","sources":["webpack://psbeauty/./src/components/Button/Button.module.scss?197e","components/Button/index.tsx","components/Modal/ModalPopup/index.tsx","webpack://psbeauty/./src/components/Modal/ModalDialog/ModalDialog.module.scss?9216","components/Modal/ModalDialog/index.tsx","webpack://psbeauty/./src/components/Modal/ModalHeader/ModalHeader.module.scss?68a2","components/Modal/ModalHeader/index.tsx","webpack://psbeauty/./src/components/Modal/ModalBody/ModalBody.module.scss?5b3c","components/Modal/ModalBody/index.tsx","webpack://psbeauty/./src/components/Modal/ModalFooter/ModalFooter.module.scss?a978","components/Modal/ModalFooter/index.tsx","components/Modal/Modal/index.tsx","components/Modal/withOpen.tsx","components/Modal/index.tsx","webpack://psbeauty/./src/pages/ResendVerification/ResendVerification.module.scss?fc42","pages/ResendVerification/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Button_wrapper__GqKsN\",\"primary\":\"Button_primary__9MLUH\",\"secondary\":\"Button_secondary__sUGsj\",\"selected\":\"Button_selected__NZP20\",\"text\":\"Button_text__Rk+Tr\",\"transparent\":\"Button_transparent__puDsp\"};","import React, { PropsWithChildren } from \"react\"\nimport cx from \"classnames\"\nimport styled from \"./Button.module.scss\"\n\nconst VARIANT = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  TEXT: \"text\",\n  TRANSPARENT: \"transparent\",\n} as const\n\nexport type ButtonProps = {\n  /**\n   * Specify the type of the\n   */\n  variant?: typeof VARIANT[keyof typeof VARIANT]\n  /**\n   * Specify whether the Button is currently selected\n   */\n  selected?: boolean\n  /**\n   * The button's key for the ButtonGroup.\n   */\n  eventKey?: ReactProps.EventKey\n  /**\n   * The button is a submit/text button\n   */\n  type?: \"submit\" | \"button\"\n  /**\n   * Provide an optional function to be called when the button element is clicked\n   */\n  onClick?: (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    eventKey?: { eventKey?: ReactProps.EventKey },\n  ) => void\n} & ReactProps.Component\n\nconst Button = ({\n  variant = \"primary\",\n  className,\n  selected = false,\n  children = \"Click\",\n  eventKey,\n  onClick,\n  ...props\n}: PropsWithChildren<ButtonProps>) => {\n  return (\n    <button\n      className={cx(styled.wrapper, styled[variant], { [styled.selected]: selected }, className)}\n      style={props.style}\n      onClick={e => {\n        onClick && onClick(e, { eventKey: eventKey })\n      }}\n      {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import Popup from \"reactjs-popup\"\nimport { PopupProps } from \"reactjs-popup/dist/types\"\n\nexport type ModalPopupProps = {\n  /**\n   * Should the modal appear on screen or not\n   */\n  open?: boolean\n  backdrop?: boolean\n} & Partial<Pick<PopupProps, \"open\" | \"closeOnDocumentClick\" | \"onClose\" | \"children\">>\n\nconst ModalPopup = ({ open = false, backdrop = true, ...props }: ModalPopupProps) => {\n  return (\n    <Popup\n      modal\n      nested\n      lockScroll\n      open={open}\n      closeOnDocumentClick={backdrop}\n      closeOnEscape\n      onClose={props.onClose}\n      contentStyle={{\n        background: \"transparent\",\n        border: \"none\",\n        width: \"auto\",\n      }}\n      overlayStyle={{\n        backgroundColor: \"#091e428a\",\n      }}>\n      {props.children}\n    </Popup>\n  )\n}\n\nexport default ModalPopup\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ModalDialog_wrapper__SJQv5\"};","import cx from \"classnames\"\nimport styled from \"./ModalDialog.module.scss\"\n\nexport type ModalDialogProps = ReactProps.Component\n\nconst ModalDialog = (props: ModalDialogProps) => {\n  return (\n    <div className={cx(styled.wrapper, props.className)} style={props.style}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default ModalDialog\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ModalHeader_wrapper__tVVhd\"};","import cx from \"classnames\"\nimport styled from \"./ModalHeader.module.scss\"\n\nexport type ModalHeaderProps = {\n  /**\n   * The Modal header.\n   */\n  title?: string\n} & ReactProps.Component\n\nconst ModalHeader = (props: ModalHeaderProps) => {\n  return (\n    <header className={cx(styled.wrapper, props.className)} style={props.style}>\n      <h1>{props.title}</h1>\n      {props.children}\n    </header>\n  )\n}\n\nexport default ModalHeader\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ModalBody_main__yFQS5\"};","import cx from \"classnames\"\nimport styled from \"./ModalBody.module.scss\"\n\nexport type ModalBodyProps = {\n  /**\n   * The Modal content. (props.children > props.content)\n   */\n  content?: string\n} & ReactProps.Component\n\nconst ModalBody = (props: ModalBodyProps) => {\n  return (\n    <main className={cx(styled.main, props.className)} style={props.style}>\n      {props.children || props.content}\n    </main>\n  )\n}\n\nexport default ModalBody\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ModalFooter_wrapper__eBzg3\",\"disabled\":\"ModalFooter_disabled__U85L9\"};","import cx from \"classnames\"\nimport styled from \"./ModalFooter.module.scss\"\n\nexport type ModalFooterProps = {\n  /**\n   * The text for confirm button.\n   */\n  confirmText?: string\n  /**\n   * The props for confirm button.\n   */\n  confirmButtonProps?: JSX.IntrinsicElements[\"button\"]\n  /**\n   * A callback triggered whenever the modal is confirmed.\n   */\n  onConfirm?: () => void\n  /**\n   * The text for cancel button, if text is null button will be hidden\n   */\n  cancelText?: string | null\n  /**\n   * The props for cancel button.\n   */\n  cancelButtonProps?: JSX.IntrinsicElements[\"button\"]\n  /**\n   * A callback triggered whenever the cancel button clicked.\n   */\n  onCancel?: () => void\n  /**\n   * A callback triggered whenever the modal is closed.\n   */\n  onClose?: () => void\n} & ReactProps.Component\n\nconst ModalFooter = (props: ModalFooterProps) => {\n  const handleConfirm = () => {\n    props.onConfirm && props.onConfirm()\n    props.onClose && props.onClose()\n  }\n\n  const handleCancel = () => {\n    props.onCancel && props.onCancel()\n    props.onClose && props.onClose()\n  }\n\n  return (\n    <footer className={cx(styled.wrapper, props.className)} style={props.style}>\n      {!!props.cancelText && (\n        <div\n          onClick={handleCancel}\n          className={cx({ [styled.disabled]: props.cancelButtonProps?.disabled })}>\n          {props.cancelText}\n        </div>\n      )}\n      {!!props.confirmText && (\n        <div\n          onClick={handleConfirm}\n          className={cx({ [styled.disabled]: props.confirmButtonProps?.disabled })}>\n          {props.confirmText}\n        </div>\n      )}\n    </footer>\n  )\n}\n\nexport default ModalFooter\n","import ModalPopup from \"../ModalPopup\"\nimport ModalDialog from \"../ModalDialog\"\nimport Header from \"../ModalHeader\"\nimport Body from \"../ModalBody\"\nimport Footer from \"../ModalFooter\"\nimport { ModalPopupProps } from \"../ModalPopup\"\nimport { ModalBodyProps } from \"../ModalBody\"\nimport { ModalHeaderProps } from \"../ModalHeader\"\nimport { ModalFooterProps } from \"../ModalFooter\"\nimport { PopupProps } from \"reactjs-popup/dist/types\"\n\nexport type ModalProps = ModalPopupProps &\n  ModalBodyProps &\n  ModalHeaderProps &\n  ModalFooterProps &\n  Partial<Pick<PopupProps, \"open\" | \"closeOnDocumentClick\" | \"onClose\" | \"children\">>\n\nconst Modal = (props: ModalProps) => {\n  return (\n    <ModalPopup open={props.open} closeOnDocumentClick={props.backdrop} onClose={props.onClose}>\n      <ModalDialog>\n        <Header title={props.title} />\n        <Body content={props.content}>{props.children}</Body>\n        <Footer\n          confirmText={props.confirmText}\n          confirmButtonProps={props.confirmButtonProps}\n          cancelText={props.cancelText}\n          cancelButtonProps={props.cancelButtonProps}\n          onConfirm={props.onConfirm}\n          onCancel={props.onCancel}\n          onClose={props.onClose}\n        />\n      </ModalDialog>\n    </ModalPopup>\n  )\n}\n\nexport default Modal\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { ModalProps } from \"./Modal\"\n\nexport const getPopupRoot = () => {\n  let popupRoot = document.getElementById(\"popup-root\")\n  if (!popupRoot) {\n    popupRoot = document.createElement(\"div\")\n    popupRoot.setAttribute(\"id\", \"popup-root\")\n    document.body.appendChild(popupRoot)\n  }\n  return popupRoot\n}\n\nexport function open(Modal: React.FC<ModalProps>, config: ModalProps) {\n  const modalRoot = getPopupRoot()\n  const modalDiv = document.createElement(\"div\")\n  modalRoot.appendChild(modalDiv)\n\n  function bindClose(config: ModalProps) {\n    const { onConfirm, onCancel, onClose, ...theOtherConfig } = config\n    const bind = (fn?: () => void) =>\n      fn\n        ? () => {\n            typeof fn === \"function\" && fn()\n            close()\n          }\n        : close\n\n    return {\n      ...theOtherConfig,\n      onConfirm: bind(onConfirm),\n      onCancel: bind(onCancel),\n      onClose: bind(onClose),\n    }\n  }\n\n  function render(config: ModalProps) {\n    ReactDOM.render(<Modal {...bindClose(config)} />, modalDiv)\n  }\n\n  function update(newConfig: ModalProps) {\n    render({\n      ...config,\n      ...newConfig,\n      open: true,\n    })\n  }\n\n  function close() {\n    render({\n      ...config,\n      open: false,\n    })\n  }\n\n  render({\n    ...config,\n    open: true,\n  })\n\n  return {\n    destroy: close,\n    update,\n  }\n}\n\nexport function withAlert(config: ModalProps) {\n  return {\n    ...config,\n    cancelText: null,\n  }\n}\n\nexport function withConfirm(config: ModalProps) {\n  return {\n    ...config,\n    cancelText: config.cancelText,\n  }\n}\n","import ModalBase, { ModalProps } from \"./Modal\"\nimport CustomModal from \"./CustomModal\"\nimport ModalDialog from \"./ModalDialog\"\nimport ModalHeader from \"./ModalHeader\"\nimport ModalBody from \"./ModalBody\"\nimport ModalFooter from \"./ModalFooter\"\nimport { open, withAlert, withConfirm } from \"./withOpen\"\n\nexport type { ModalProps } from \"./Modal\"\nexport type { CustomModalProps } from \"./CustomModal\"\nexport type { ModalHeaderProps } from \"./ModalHeader\"\nexport type { ModalFooterProps } from \"./ModalFooter\"\n\nconst Modal = Object.assign(ModalBase, {\n  alert: (config: ModalProps) => open(ModalBase, withAlert(config)),\n  confirm: (config: ModalProps) => open(ModalBase, withConfirm(config)),\n  Dialog: ModalDialog,\n  Header: ModalHeader,\n  Body: ModalBody,\n  Footer: ModalFooter,\n})\n\nexport { CustomModal }\nexport default Modal\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ResendVerification_wrapper__xFesl\",\"title\":\"ResendVerification_title__BbNh8\",\"subtitle\":\"ResendVerification_subtitle__JWDZp\",\"actions\":\"ResendVerification_actions__srbPO\"};","import styled from \"./ResendVerification.module.scss\"\nimport Form from \"components/Form\"\nimport Button from \"components/Button\"\nimport Modal from \"components/Modal\"\nimport { useState } from \"react\"\nimport { useGo } from \"components/Router\"\nimport { SubmitHandler, useForm } from \"react-hook-form\"\nimport * as FirebaseClient from \"firebaseClient\"\n\ntype Inputs = {\n  account: string\n  password: string\n}\n\nconst SignIn = () => {\n  const go = useGo()\n  const [message, setMessage] = useState(\"\")\n  const { register, handleSubmit } = useForm<Inputs>({\n    mode: \"all\",\n  })\n\n  const onSubmit: SubmitHandler<Inputs> = async info => {\n    try {\n      await FirebaseClient.resendEmailVerificationByLogin(info.account, info.password)\n      setMessage(\"發送成功\")\n    } catch (e) {\n      if (/too-many-requests/.test(`${e}`)) {\n        setMessage(\"驗證信已寄送\")\n      } else {\n        setMessage(\"帳號密碼錯誤，請重新輸入\")\n      }\n    }\n  }\n\n  return (\n    <div className={styled.wrapper}>\n      <div className={styled.title}>重發驗證信件</div>\n      <div className={styled.subtitle}>歡迎回來！請輸入你的資料</div>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Input type=\"text\" variant=\"gray\" placeholder=\"帳號\" {...register(\"account\")} />\n        <Form.Input type=\"password\" variant=\"gray\" placeholder=\"密碼\" {...register(\"password\")} />\n        <Button variant=\"transparent\" type=\"submit\">\n          重新發送\n        </Button>\n        <Button variant=\"transparent\" type=\"button\" onClick={go.toHome}>\n          訪客登入\n        </Button>\n        <Modal title=\"訊息\" open={!!message} confirmText=\"確定\" onClose={() => setMessage(\"\")}>\n          {message}\n        </Modal>\n      </Form>\n      <div className={styled.actions}>\n        <div />\n        <div onClick={go.toForgotPassword}>忘記密碼</div>\n        <div>|</div>\n        <div onClick={go.toRegister}>註冊帳號</div>\n        <div />\n      </div>\n    </div>\n  )\n}\nexport default SignIn\n"],"names":["variant","className","selected","children","eventKey","onClick","props","cx","styled","style","e","open","backdrop","modal","nested","lockScroll","closeOnDocumentClick","closeOnEscape","onClose","contentStyle","background","border","width","overlayStyle","backgroundColor","title","content","cancelText","onCancel","cancelButtonProps","disabled","confirmText","onConfirm","confirmButtonProps","Modal","config","modalRoot","popupRoot","document","getElementById","createElement","setAttribute","body","appendChild","getPopupRoot","modalDiv","render","ReactDOM","theOtherConfig","bind","fn","close","bindClose","destroy","update","newConfig","Object","assign","ModalBase","alert","withAlert","confirm","withConfirm","Dialog","ModalDialog","Header","ModalHeader","Body","ModalBody","Footer","ModalFooter","go","useGo","useState","message","setMessage","useForm","mode","register","handleSubmit","onSubmit","info","FirebaseClient","account","password","test","Form","type","placeholder","Button","toHome","toForgotPassword","toRegister"],"sourceRoot":""}