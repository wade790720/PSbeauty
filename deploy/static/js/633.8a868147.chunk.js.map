{"version":3,"file":"static/js/633.8a868147.chunk.js","mappings":"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","sources":["webpack://psbeauty/./src/components/Layout/Header/Header.module.scss?8aca","components/Layout/Header/index.tsx","webpack://psbeauty/./src/containers/SearchBar/SearchBar.module.scss?ba8a","containers/SearchBar/index.tsx","webpack://psbeauty/./src/pages/SearchWrapper/SearchWrapper.module.scss?09cb","pages/SearchWrapper/index.tsx","../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Header_wrapper__e2tXX\",\"large\":\"Header_large__tDbDa\",\"small\":\"Header_small__U9DHq\",\"back\":\"Header_back__Chgho\",\"title\":\"Header_title__87Ruw\",\"has-back\":\"Header_has-back__h6eqr\"};","import styled from \"./Header.module.scss\"\nimport cx from \"classnames\"\nimport Icon from \"components/Icon\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useParams } from \"react-router-dom\"\n\nexport type HeaderProps = {\n  leftArrow?: boolean\n  title?: string\n  redirect?: () => void\n} & ReactProps.Component\n\nconst Header = ({ style = {}, ...props }: HeaderProps) => {\n  const navigate = useNavigate()\n  const { text } = useParams()\n\n  return (\n    <div\n      className={cx(styled.wrapper, props.className, {\n        [styled.large]: props.title || props.children,\n        [styled.small]: !props.title && !props.leftArrow,\n      })}\n      style={{ ...style }}>\n      {props.leftArrow && (\n        <div\n          onClick={() => (props.redirect ? props.redirect() : text ? navigate(-2) : navigate(-1))}>\n          <Icon className={styled[\"back\"]} name=\"LeftArrow\" />\n        </div>\n      )}\n      {props.title ? (\n        <div\n          className={cx(styled.title, {\n            [styled[\"has-back\"]]: props.leftArrow,\n          })}>\n          {props.title}\n        </div>\n      ) : (\n        props.children\n      )}\n    </div>\n  )\n}\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__1AAJr\",\"white\":\"SearchBar_white__mDPdl\",\"input-group\":\"SearchBar_input-group__z5ELN\",\"search-icon\":\"SearchBar_search-icon__8ZKy7\",\"input\":\"SearchBar_input__r7hO3\"};","import React, { useState } from \"react\"\nimport styled from \"./SearchBar.module.scss\"\nimport cx from \"classnames\"\nimport Form, { InputGroup, Prepend, Append } from \"components/Form\"\nimport Icon from \"components/Icon\"\n\nexport type SearchBarProps = {\n  variant?: string\n  onChange?: (value: string) => void\n  onInputClick?: () => void\n} & ReactProps.Component\n\nconst SearchBar = React.forwardRef<HTMLInputElement, SearchBarProps>(function SearchBar(\n  props,\n  ref,\n) {\n  const [empty, setEmpty] = useState(true)\n\n  return (\n    <div className={cx(styled.wrapper, styled[props.variant || \"\"])}>\n      <InputGroup className={styled[\"input-group\"]}>\n        <Prepend className={styled[\"search-icon\"]}>\n          <Icon name=\"search\" />\n        </Prepend>\n        <Form.Input\n          placeholder=\"搜尋關鍵字\"\n          className={styled.input}\n          style={{ backgroundColor: \"transparent\" }}\n          onChange={e => {\n            setEmpty(!e.target.value)\n            if (props.onChange) {\n              props.onChange(e.target.value)\n            }\n          }}\n          onClick={() => {\n            if (props.onInputClick) {\n              props.onInputClick()\n            }\n          }}\n          ref={ref}\n        />\n        {ref && !empty && (\n          <Append className={styled[\"cross-icon\"]}>\n            <div\n              onClick={() => {\n                if (ref && \"current\" in ref && ref.current) {\n                  ref.current.value = \"\"\n                  setEmpty(true)\n                }\n              }}>\n              <Icon name=\"purple-cross\" />\n            </div>\n          </Append>\n        )}\n      </InputGroup>\n    </div>\n  )\n})\n\nexport default SearchBar\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchWrapper_wrapper__a9XwN\",\"submit\":\"SearchWrapper_submit__Fg4VI\"};","import { useRef } from \"react\"\nimport { Outlet, useSearchParams, useParams } from \"react-router-dom\"\nimport Header from \"components/Layout/Header\"\nimport styled from \"./SearchWrapper.module.scss\"\nimport SearchBar from \"containers/SearchBar\"\nimport { useGo } from \"components/Router\"\n\nconst STORAGE_KEY = \"search-history\"\nconst getHistories = (): string[] => {\n  const data = localStorage.getItem(STORAGE_KEY)\n  try {\n    if (data) {\n      const result = JSON.parse(data)\n      return result.length > 0 ? result : []\n    }\n  } catch {\n    /* 解析失敗 */\n  }\n  return []\n}\n\nconst saveHistories = (list: string[]) => {\n  const result = list.filter((value, index, arr) => arr.indexOf(value) === index).slice(0, 10)\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(result))\n  return result\n}\n\nconst SearchWrapper = () => {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const { text: originText } = useParams()\n  const ref = useRef<HTMLInputElement | null>(null)\n  const tag = searchParams.get(\"tag\")\n  const go = useGo()\n\n  const onSubmit = (text: string) => {\n    const list = getHistories()\n    list.unshift(text)\n    saveHistories(list)\n    if (!tag) {\n      go.toSearchList(text, { replace: !!originText })\n    } else {\n      setSearchParams({ tag: text })\n    }\n  }\n\n  return (\n    <>\n      <Header leftArrow>\n        <div className={styled.wrapper}>\n          <SearchBar variant=\"white\" ref={ref} />\n          <div\n            className={styled.submit}\n            onClick={() => {\n              if (ref.current) onSubmit(ref.current.value)\n            }}>\n            送出\n          </div>\n        </div>\n      </Header>\n      <Outlet />\n    </>\n  )\n}\nexport default SearchWrapper\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["style","props","navigate","useNavigate","text","useParams","className","cx","styled","title","children","leftArrow","onClick","redirect","Icon","name","React","ref","useState","empty","setEmpty","variant","Form","placeholder","backgroundColor","onChange","e","target","value","onInputClick","current","STORAGE_KEY","useSearchParams","searchParams","setSearchParams","originText","useRef","tag","get","go","useGo","onSubmit","list","data","localStorage","getItem","result","JSON","parse","length","getHistories","unshift","filter","index","arr","indexOf","slice","setItem","stringify","saveHistories","toSearchList","replace","Header","SearchBar","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","_objectWithoutProperties","source","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toUpperCase"],"sourceRoot":""}