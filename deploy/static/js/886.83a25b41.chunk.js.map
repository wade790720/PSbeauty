{"version":3,"file":"static/js/886.83a25b41.chunk.js","mappings":"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","sources":["webpack://psbeauty/./src/components/Button/Button.module.scss?197e","components/Button/index.tsx","webpack://psbeauty/./src/components/Drawer/Drawer.module.scss?f454","components/Drawer/useMountTransition.tsx","components/Drawer/index.tsx","webpack://psbeauty/./src/containers/Banner/Banner.module.scss?32fd","containers/Banner/index.tsx","webpack://psbeauty/./src/containers/SearchBar/SearchBar.module.scss?ba8a","containers/SearchBar/index.tsx","graphql/queries/getAdImage.graphql.generated.ts","webpack://psbeauty/./src/pages/Clinic/Clinic.module.scss?83c2","pages/Clinic/ClinicCard.tsx","webpack://psbeauty/./src/pages/Clinic/DistrictsFilter/DistrictsFilter.module.scss?540b","pages/Clinic/DistrictsFilter/index.tsx","pages/Clinic/ClinicCard.graphql.generated.ts","pages/Clinic/index.tsx","pages/Member/MemberInbox/MemberInbox.graphql.generated.ts","types/schema.ts","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Button_wrapper__GqKsN\",\"primary\":\"Button_primary__9MLUH\",\"secondary\":\"Button_secondary__sUGsj\",\"selected\":\"Button_selected__NZP20\",\"text\":\"Button_text__Rk+Tr\",\"transparent\":\"Button_transparent__puDsp\"};","import React, { PropsWithChildren } from \"react\"\nimport cx from \"classnames\"\nimport styled from \"./Button.module.scss\"\n\nconst VARIANT = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  TEXT: \"text\",\n  TRANSPARENT: \"transparent\",\n} as const\n\nexport type ButtonProps = {\n  /**\n   * Specify the type of the\n   */\n  variant?: typeof VARIANT[keyof typeof VARIANT]\n  /**\n   * Specify whether the Button is currently selected\n   */\n  selected?: boolean\n  /**\n   * The button's key for the ButtonGroup.\n   */\n  eventKey?: ReactProps.EventKey\n  /**\n   * The button is a submit/text button\n   */\n  type?: \"submit\" | \"button\"\n  /**\n   * Provide an optional function to be called when the button element is clicked\n   */\n  onClick?: (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    eventKey?: { eventKey?: ReactProps.EventKey },\n  ) => void\n} & ReactProps.Component\n\nconst Button = ({\n  variant = \"primary\",\n  className,\n  selected = false,\n  children = \"Click\",\n  eventKey,\n  onClick,\n  ...props\n}: PropsWithChildren<ButtonProps>) => {\n  return (\n    <button\n      className={cx(styled.wrapper, styled[variant], { [styled.selected]: selected }, className)}\n      style={props.style}\n      onClick={e => {\n        onClick && onClick(e, { eventKey: eventKey })\n      }}\n      {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Drawer_wrapper__m8DLF\",\"active\":\"Drawer_active__TUvIS\",\"in\":\"Drawer_in__iy-NA\",\"container\":\"Drawer_container__ueJMK\",\"overlay\":\"Drawer_overlay__cT73f\"};","import { useEffect, useState } from \"react\"\n\nconst useMountTransition = (isMounted: boolean, unmountDelay = 0) => {\n  const [isTransitioning, setIsTransitioning] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout> | null = null\n\n    if (isMounted && !isTransitioning) {\n      setIsTransitioning(true)\n    } else if (!isMounted && isTransitioning) {\n      timeoutId = setTimeout(() => setIsTransitioning(false), unmountDelay)\n    }\n    return () => {\n      timeoutId && clearTimeout(timeoutId)\n    }\n  }, [unmountDelay, isMounted, isTransitioning])\n\n  return isTransitioning\n}\n\nexport default useMountTransition\n","import { useRef, useEffect } from \"react\"\nimport cx from \"classnames\"\nimport styled from \"./Drawer.module.scss\"\nimport { createPortal } from \"react-dom\"\nimport useMountTransition from \"./useMountTransition\"\n\nexport type DrawerProps = {\n  /**\n   * Should the drawer appear on screen or not\n   */\n  open: boolean\n  /**\n   * A callback function whenever the drawer closed.\n   */\n  onClose?: () => void\n  /**\n   * Allows the drawer container custom width\n   */\n  size?: string | number\n} & ReactProps.Component\n\nconst Drawer = ({\n  open = true,\n  size = 250,\n  className,\n  onClose,\n  children,\n  style,\n  ...props\n}: DrawerProps) => {\n  const isTransitioning = useMountTransition(open, 300)\n\n  // 動態產生dom\n  const createPortalRoot = () => {\n    const drawerRoot = document.createElement(\"div\")\n    drawerRoot.setAttribute(\"id\", \"drawer-root\")\n    return drawerRoot\n  }\n\n  const portalRootRef = useRef(document.getElementById(\"drawer-root\") || createPortalRoot())\n  const bodyRef = useRef(document.querySelector(\"body\"))\n  const bodyEl = bodyRef.current\n\n  useEffect(() => {\n    bodyEl && bodyEl.appendChild(portalRootRef.current)\n  }, [])\n\n  useEffect(() => {\n    const updatePageScroll = () => {\n      if (open) {\n        bodyEl && (bodyEl.style.overflow = \"hidden\")\n      } else {\n        bodyEl && (bodyEl.style.overflow = \"unset\")\n      }\n    }\n    updatePageScroll()\n  }, [open])\n\n  if (!isTransitioning && !open) return null\n\n  return createPortal(\n    <div\n      className={cx(\n        styled.wrapper,\n        { [styled.in]: isTransitioning },\n        { [styled.active]: open },\n        className,\n      )}\n      style={style}\n      {...props}>\n      <div className={styled.overlay} onClick={onClose} />\n      <div\n        className={styled.container}\n        style={{ height: typeof size === \"number\" ? `${size}px` : size }}>\n        {children}\n      </div>\n    </div>,\n    portalRootRef.current,\n  )\n}\n\nexport default Drawer\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"Banner_banner__IONV+\",\"slide\":\"Banner_slide__EI7xM\"};","import styled from \"./Banner.module.scss\"\nimport { useGo } from \"components/Router\"\nimport Carousel from \"nuka-carousel\"\n\ntype BannerProps = {\n  height?: string\n  images?: {\n    image: string\n    clinicId: string\n    targetId: string\n    redirectType: string | null | undefined\n  }[]\n}\n\nconst Banner = ({ height = \"132px\", images = [] }: BannerProps) => {\n  const go = useGo()\n\n  return (\n    <div className={styled.banner}>\n      {images.length === 0 && (\n        <div className={styled.slide} style={{ height, background: \"#aab0b233\" }} />\n      )}\n      <Carousel\n        autoplay={true}\n        autoplayInterval={5000}\n        wrapAround={true}\n        withoutControls={true}\n        cellSpacing={12}\n        dragThreshold={0.1}>\n        {images?.map(item => (\n          <div\n            key={item.clinicId}\n            className={styled.slide}\n            style={{ height }}\n            onClick={() => {\n              if (!item.clinicId) return\n\n              if (item.redirectType === \"clinic\")\n                go.toClinicInner({ id: item.clinicId, tab: \"info\" })\n              else if (item.redirectType === \"case\" && item.targetId)\n                go.toClinicCase({ clinicId: item.clinicId, caseId: item.targetId })\n              else if (item.redirectType === \"doctor\")\n                go.toClinicInner({ id: item.clinicId, tab: \"medical-team\" })\n              else if (item.redirectType === \"activity\" && item.targetId)\n                go.toClinicActivity({ clinicId: item.clinicId, activityId: item.targetId })\n            }}>\n            {item && <img src={item?.image} width=\"100%\" height=\"100%\" />}\n          </div>\n        ))}\n      </Carousel>\n    </div>\n  )\n}\n\nexport default Banner\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__1AAJr\",\"white\":\"SearchBar_white__mDPdl\",\"input-group\":\"SearchBar_input-group__z5ELN\",\"search-icon\":\"SearchBar_search-icon__8ZKy7\",\"input\":\"SearchBar_input__r7hO3\"};","import React, { useState } from \"react\"\nimport styled from \"./SearchBar.module.scss\"\nimport cx from \"classnames\"\nimport Form, { InputGroup, Prepend, Append } from \"components/Form\"\nimport Icon from \"components/Icon\"\n\nexport type SearchBarProps = {\n  variant?: string\n  onChange?: (value: string) => void\n  onInputClick?: () => void\n} & ReactProps.Component\n\nconst SearchBar = React.forwardRef<HTMLInputElement, SearchBarProps>(function SearchBar(\n  props,\n  ref,\n) {\n  const [empty, setEmpty] = useState(true)\n\n  return (\n    <div className={cx(styled.wrapper, styled[props.variant || \"\"])}>\n      <InputGroup className={styled[\"input-group\"]}>\n        <Prepend className={styled[\"search-icon\"]}>\n          <Icon name=\"search\" />\n        </Prepend>\n        <Form.Input\n          placeholder=\"搜尋關鍵字\"\n          className={styled.input}\n          style={{ backgroundColor: \"transparent\" }}\n          onChange={e => {\n            setEmpty(!e.target.value)\n            if (props.onChange) {\n              props.onChange(e.target.value)\n            }\n          }}\n          onClick={() => {\n            if (props.onInputClick) {\n              props.onInputClick()\n            }\n          }}\n          ref={ref}\n        />\n        {ref && !empty && (\n          <Append className={styled[\"cross-icon\"]}>\n            <div\n              onClick={() => {\n                if (ref && \"current\" in ref && ref.current) {\n                  ref.current.value = \"\"\n                  setEmpty(true)\n                }\n              }}>\n              <Icon name=\"purple-cross\" />\n            </div>\n          </Append>\n        )}\n      </InputGroup>\n    </div>\n  )\n})\n\nexport default SearchBar\n","import * as Types from \"../../types/schema\"\n\nimport { gql } from \"@apollo/client\"\nimport * as Apollo from \"@apollo/client\"\nconst defaultOptions = {} as const\nexport type GetAdImagesQueryVariables = Types.Exact<{\n  first?: Types.InputMaybe<Types.Scalars[\"Int\"]>\n  orderId?: Types.InputMaybe<Types.SortEnumType>\n  where?: Types.InputMaybe<Types.Scalars[\"String\"]>\n}>\n\nexport type GetAdImagesQuery = {\n  adImages?: {\n    __typename: \"AdImagesConnection\"\n    edges?: Array<{\n      __typename: \"AdImagesEdge\"\n      cursor: string\n      node?: {\n        __typename: \"AdImage\"\n        id?: string | null\n        image?: string | null\n        sort: number\n        usageType?: string | null\n        redirectType?: string | null\n        targetId?: string | null\n        clinicId?: string | null\n        status: boolean\n        title?: string | null\n      } | null\n    }> | null\n  } | null\n}\n\nexport const GetAdImagesDocument = gql`\n  query GetAdImages($first: Int, $orderId: SortEnumType, $where: String) {\n    adImages(where: { usageType: { eq: $where } }, order: { id: $orderId }, first: $first) {\n      edges {\n        cursor\n        node {\n          id\n          image\n          sort\n          usageType\n          redirectType\n          targetId\n          clinicId\n          status\n          title\n        }\n      }\n    }\n  }\n`\n\n/**\n * __useGetAdImagesQuery__\n *\n * To run a query within a React component, call `useGetAdImagesQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAdImagesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAdImagesQuery({\n *   variables: {\n *      first: // value for 'first'\n *      orderId: // value for 'orderId'\n *      where: // value for 'where'\n *   },\n * });\n */\nexport function useGetAdImagesQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetAdImagesQuery, GetAdImagesQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useQuery<GetAdImagesQuery, GetAdImagesQueryVariables>(GetAdImagesDocument, options)\n}\nexport function useGetAdImagesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetAdImagesQuery, GetAdImagesQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useLazyQuery<GetAdImagesQuery, GetAdImagesQueryVariables>(\n    GetAdImagesDocument,\n    options,\n  )\n}\nexport type GetAdImagesQueryHookResult = ReturnType<typeof useGetAdImagesQuery>\nexport type GetAdImagesLazyQueryHookResult = ReturnType<typeof useGetAdImagesLazyQuery>\nexport type GetAdImagesQueryResult = Apollo.QueryResult<GetAdImagesQuery, GetAdImagesQueryVariables>\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Clinic_wrapper__LtwnA\",\"header\":\"Clinic_header__SEM4V\",\"chat-icon\":\"Clinic_chat-icon__dWhP2\",\"chat-unread\":\"Clinic_chat-unread__lFHeN\",\"inner\":\"Clinic_inner__8LFlN\",\"filter\":\"Clinic_filter__z0mqW\",\"banner\":\"Clinic_banner__YYBZ+\",\"card\":\"Clinic_card__Y9Tqz\",\"button\":\"Clinic_button__O7AUB\",\"funnel\":\"Clinic_funnel__ly+xo\",\"clinic\":\"Clinic_clinic__G0GIi\",\"title\":\"Clinic_title__6yGje\",\"sub-title\":\"Clinic_sub-title__NU7to\",\"content\":\"Clinic_content__EdZrW\",\"block\":\"Clinic_block__ENhBe\",\"case\":\"Clinic_case__BzDdT\",\"reply\":\"Clinic_reply__-X-p3\"};","import styled from \"./Clinic.module.scss\"\nimport useGo from \"components/Router/useGo\"\n\nexport type ClinicCardProps = {\n  id: string\n  name: string\n  county: string\n  town: string\n  caseCount: number\n  consultReplyCount: number\n}\n\nconst ClinicCard = ({ ...props }: ClinicCardProps) => {\n  const go = useGo()\n  return (\n    <div className={styled.clinic} onClick={() => go.toClinicInner({ id: props.id, tab: \"\" })}>\n      <div className={styled.title}>{props.name}</div>\n      <div className={styled[\"sub-title\"]}>\n        {props.county}\n        {props.town}\n      </div>\n      <div className={styled.content}>\n        <div className={styled.case}>\n          <div className={styled.block} />\n          案例數 <span>{props.caseCount}</span>\n        </div>\n        <div className={styled.reply}>\n          <div className={styled.block} />\n          回覆數 <span>{props.consultReplyCount}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ClinicCard\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DistrictsFilter_wrapper__Kfd1k\",\"title\":\"DistrictsFilter_title__Cu34Y\",\"content\":\"DistrictsFilter_content__s+zhT\",\"city\":\"DistrictsFilter_city__kay63\",\"item\":\"DistrictsFilter_item__8zl+J\",\"select\":\"DistrictsFilter_select__yhOZo\",\"dist\":\"DistrictsFilter_dist__HTN6y\",\"buttons\":\"DistrictsFilter_buttons__exa3L\"};","import Drawer from \"components/Drawer\"\nimport Form from \"components/Form\"\nimport Button from \"components/Button\"\nimport { useState } from \"react\"\nimport styled from \"./DistrictsFilter.module.scss\"\nimport districtsData from \"./taiwan_districts.json\"\nimport cx from \"classnames\"\n\ntype DistrictsFilterProps = {\n  open: boolean\n  onClose: (value: RegionProps) => void\n}\n\ntype RegionProps = {\n  county: string\n  town: string\n}[]\n\nconst DistrictsFilter = (props: DistrictsFilterProps) => {\n  const [countyEventKey, setCountyEventKey] = useState(\"臺北市\")\n  const [region, setRegion] = useState<RegionProps>([])\n  const [isCheckAll, setIsCheckAll] = useState<string[]>([])\n\n  return (\n    <Drawer\n      open={props.open}\n      onClose={() => {\n        props.onClose([])\n      }}\n      size=\"516px\">\n      <div className={styled.wrapper}>\n        <div className={styled.title}>地區篩選</div>\n        <div className={styled.content}>\n          <div className={styled.city}>\n            {districtsData.map(item => {\n              return (\n                <button\n                  key={item.name}\n                  onClick={() => {\n                    setCountyEventKey(item.name)\n                  }}\n                  className={cx(styled.item, { [styled.select]: item.name === countyEventKey })}>\n                  {item.name}\n                </button>\n              )\n            })}\n          </div>\n          <div className={styled.dist}>\n            <Form.Checkbox\n              className={styled.item}\n              checked={isCheckAll?.some(el => el === countyEventKey)}\n              onChange={() => {\n                if (isCheckAll?.some(el => el === countyEventKey))\n                  setIsCheckAll(isCheckAll.filter(el => el !== countyEventKey))\n                else setIsCheckAll([...isCheckAll, countyEventKey])\n              }}\n              onClick={() => {\n                const target =\n                  districtsData\n                    .find(county => county.name === countyEventKey)\n                    ?.districts.map(el => ({\n                      county: countyEventKey,\n                      town: el.name,\n                    })) || []\n\n                if (isCheckAll?.some(el => el === countyEventKey)) {\n                  setRegion(\n                    region.filter(item => {\n                      return (\n                        target.findIndex(\n                          el => el.town === item.town && el.county === item.county,\n                        ) === -1\n                      )\n                    }),\n                  )\n\n                  return\n                }\n\n                const sum = [...region, ...target]\n                setRegion(\n                  sum.filter(\n                    (el, i) =>\n                      sum.findIndex(s => el.county === s.county && el.town === s.town) === i,\n                  ),\n                )\n              }}>\n              全選\n            </Form.Checkbox>\n            {districtsData\n              .filter(county => {\n                return county.name === countyEventKey\n              })\n              .map(district => {\n                return district.districts.map((item, idx) => (\n                  <Form.Checkbox\n                    key={`${idx}-${item.zip}`}\n                    className={styled.item}\n                    value={item.name}\n                    checked={region?.some(\n                      el => el.county === countyEventKey && el.town === item.name,\n                    )}\n                    onChange={e => {\n                      if (isCheckAll?.some(el => el === countyEventKey))\n                        setIsCheckAll([...isCheckAll, countyEventKey])\n\n                      if (e.target.checked) {\n                        region\n                          ? setRegion([...region, { county: countyEventKey, town: item.name }])\n                          : setRegion([{ county: countyEventKey, town: item.name }])\n\n                        const target = district.districts?.map(el => ({\n                          town: el?.name,\n                          county: countyEventKey,\n                        }))\n                        const outside = [\n                          ...region.map(el => ({ town: el.town, county: el.county })),\n                          { county: countyEventKey, town: item.name },\n                        ]\n\n                        if (\n                          outside.filter(\n                            el =>\n                              target.findIndex(\n                                item => el.town === item.town && el.county === item.county,\n                              ) >= 0,\n                          ).length === target.length\n                        )\n                          setIsCheckAll([...isCheckAll, countyEventKey])\n                      } else {\n                        const target = region.filter(el =>\n                          el.town === item.name && el.county === countyEventKey ? false : true,\n                        )\n                        setRegion(target)\n                        setIsCheckAll(isCheckAll.filter(el => el !== countyEventKey))\n                      }\n                    }}>\n                    {item.name}\n                  </Form.Checkbox>\n                ))\n              })}\n          </div>\n        </div>\n        <div className={styled.buttons}>\n          <Button\n            variant=\"text\"\n            onClick={() => {\n              setRegion([])\n              setIsCheckAll([])\n            }}>\n            清除\n          </Button>\n          <Button\n            onClick={() => {\n              props.onClose(region)\n            }}>\n            完成\n          </Button>\n        </div>\n      </div>\n    </Drawer>\n  )\n}\n\nexport default DistrictsFilter\n","import * as Types from \"../../types/schema\"\n\nimport { gql } from \"@apollo/client\"\nimport * as Apollo from \"@apollo/client\"\nconst defaultOptions = {} as const\nexport type GetClinicsQueryVariables = Types.Exact<{ [key: string]: never }>\n\nexport type GetClinicsQuery = {\n  clinics?: {\n    __typename: \"ClinicsConnection\"\n    totalCount: number\n    pageInfo: {\n      __typename: \"PageInfo\"\n      hasNextPage: boolean\n      hasPreviousPage: boolean\n      startCursor?: string | null\n      endCursor?: string | null\n    }\n    edges?: Array<{\n      __typename: \"ClinicsEdge\"\n      cursor: string\n      node?: {\n        __typename: \"Clinic\"\n        consultReplyCount: number\n        caseCount: number\n        county?: string | null\n        town?: string | null\n        name?: string | null\n        id?: string | null\n      } | null\n    }> | null\n  } | null\n}\n\nexport type GetClinicsSearchQueryVariables = Types.Exact<{\n  county?: Types.InputMaybe<\n    Array<Types.InputMaybe<Types.Scalars[\"String\"]>> | Types.InputMaybe<Types.Scalars[\"String\"]>\n  >\n  town?: Types.InputMaybe<\n    Array<Types.InputMaybe<Types.Scalars[\"String\"]>> | Types.InputMaybe<Types.Scalars[\"String\"]>\n  >\n}>\n\nexport type GetClinicsSearchQuery = {\n  clinics?: {\n    __typename: \"ClinicsConnection\"\n    totalCount: number\n    pageInfo: {\n      __typename: \"PageInfo\"\n      hasNextPage: boolean\n      hasPreviousPage: boolean\n      startCursor?: string | null\n      endCursor?: string | null\n    }\n    edges?: Array<{\n      __typename: \"ClinicsEdge\"\n      cursor: string\n      node?: {\n        __typename: \"Clinic\"\n        consultReplyCount: number\n        caseCount: number\n        county?: string | null\n        town?: string | null\n        name?: string | null\n        id?: string | null\n      } | null\n    }> | null\n  } | null\n}\n\nexport const GetClinicsDocument = gql`\n  query GetClinics {\n    clinics(order: { consultReplyCount: DESC }, first: 10) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          consultReplyCount\n          caseCount\n          county\n          town\n          name\n          id\n        }\n      }\n    }\n  }\n`\n\n/**\n * __useGetClinicsQuery__\n *\n * To run a query within a React component, call `useGetClinicsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetClinicsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetClinicsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetClinicsQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetClinicsQuery, GetClinicsQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useQuery<GetClinicsQuery, GetClinicsQueryVariables>(GetClinicsDocument, options)\n}\nexport function useGetClinicsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetClinicsQuery, GetClinicsQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useLazyQuery<GetClinicsQuery, GetClinicsQueryVariables>(GetClinicsDocument, options)\n}\nexport type GetClinicsQueryHookResult = ReturnType<typeof useGetClinicsQuery>\nexport type GetClinicsLazyQueryHookResult = ReturnType<typeof useGetClinicsLazyQuery>\nexport type GetClinicsQueryResult = Apollo.QueryResult<GetClinicsQuery, GetClinicsQueryVariables>\nexport const GetClinicsSearchDocument = gql`\n  query GetClinicsSearch($county: [String], $town: [String]) {\n    clinics(\n      where: { county: { in: $county }, town: { in: $town } }\n      order: { consultReplyCount: DESC }\n      first: 10\n    ) {\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        cursor\n        node {\n          consultReplyCount\n          caseCount\n          county\n          town\n          name\n          id\n        }\n      }\n    }\n  }\n`\n\n/**\n * __useGetClinicsSearchQuery__\n *\n * To run a query within a React component, call `useGetClinicsSearchQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetClinicsSearchQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetClinicsSearchQuery({\n *   variables: {\n *      county: // value for 'county'\n *      town: // value for 'town'\n *   },\n * });\n */\nexport function useGetClinicsSearchQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetClinicsSearchQuery, GetClinicsSearchQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useQuery<GetClinicsSearchQuery, GetClinicsSearchQueryVariables>(\n    GetClinicsSearchDocument,\n    options,\n  )\n}\nexport function useGetClinicsSearchLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetClinicsSearchQuery, GetClinicsSearchQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useLazyQuery<GetClinicsSearchQuery, GetClinicsSearchQueryVariables>(\n    GetClinicsSearchDocument,\n    options,\n  )\n}\nexport type GetClinicsSearchQueryHookResult = ReturnType<typeof useGetClinicsSearchQuery>\nexport type GetClinicsSearchLazyQueryHookResult = ReturnType<typeof useGetClinicsSearchLazyQuery>\nexport type GetClinicsSearchQueryResult = Apollo.QueryResult<\n  GetClinicsSearchQuery,\n  GetClinicsSearchQueryVariables\n>\n","import styled from \"./Clinic.module.scss\"\nimport Icon from \"components/Icon\"\nimport Toolbars from \"containers/Toolbars\"\nimport SearchBar from \"containers/SearchBar\"\nimport Button from \"components/Button\"\nimport ClinicCard from \"./ClinicCard\"\nimport { useState, useRef, useEffect } from \"react\"\nimport { useAuth } from \"hooks/useAuth\"\nimport DistrictsFilter from \"./DistrictsFilter\"\nimport Banner from \"containers/Banner\"\nimport QueryStatus from \"components/QueryStatus\"\nimport { useGetAdImagesQuery } from \"graphql/queries/getAdImage.graphql.generated\"\nimport { useGetMemberInboxLazyQuery } from \"pages/Member/MemberInbox/MemberInbox.graphql.generated\"\nimport { SortEnumType } from \"types/schema\"\nimport { useGetClinicsQuery, useGetClinicsSearchLazyQuery } from \"./ClinicCard.graphql.generated\"\nimport useGo from \"components/Router/useGo\"\n\nconst Clinic = () => {\n  const ref = useRef<HTMLInputElement | null>(null)\n  const [openFilter, setOpenFilter] = useState(false)\n  const [isSearch, setIsSearch] = useState(false)\n  const auth = useAuth()\n  const go = useGo()\n\n  const getAdImagesQuery = useGetAdImagesQuery({\n    variables: {\n      first: 10,\n      orderId: SortEnumType.Desc,\n      where: \"診所輪播\",\n    },\n  })\n  const adImages = getAdImagesQuery?.data?.adImages?.edges\n    ?.map(el => ({\n      image: el.node?.image || \"\",\n      clinicId: el.node?.clinicId || \"\",\n      targetId: el.node?.targetId || \"\",\n      redirectType: el.node?.redirectType,\n      sort: el.node?.sort || 0,\n    }))\n    ?.sort((prev, next) => prev.sort - next.sort)\n\n  const getClinicsQuery = useGetClinicsQuery()\n  const [loadMemberInboxQuery, getMemberInboxQuery] = useGetMemberInboxLazyQuery()\n  const [loadGetClinicsQuerySearch, getClinicsQuerySearch] = useGetClinicsSearchLazyQuery()\n\n  const data = isSearch\n    ? getClinicsQuerySearch?.data?.clinics?.edges\n    : getClinicsQuery?.data?.clinics?.edges\n  const consults = getMemberInboxQuery.data?.me?.consults || []\n\n  useEffect(() => {\n    if (auth.user.id) {\n      loadMemberInboxQuery()\n    }\n  }, [auth.user.id, loadMemberInboxQuery])\n\n  if (getClinicsQuery.error && getAdImagesQuery.error) return <QueryStatus.Error />\n\n  return (\n    <>\n      {getClinicsQuery.loading && getAdImagesQuery.loading ? (\n        <QueryStatus.Loading />\n      ) : (\n        <div className={styled.wrapper}>\n          <div className={styled.header}>\n            <SearchBar ref={ref} onInputClick={() => go.toSearchList(\"\")} />\n            <div\n              onClick={() => {\n                auth.user.clinic ? go.toDoctorInbox() : go.toMemberInbox()\n              }}>\n              <Icon name=\"chat\" className={styled[\"chat-icon\"]} />\n              {consults.length > 1 &&\n                consults.map(consult => consult?.userInboxes?.some(el => !el?.read)) && (\n                  <div className={styled[\"chat-unread\"]} />\n                )}\n            </div>\n          </div>\n          <div className={styled.inner}>\n            {adImages && adImages?.length > 0 && (\n              <div className={styled.banner}>\n                <Banner images={adImages} />\n              </div>\n            )}\n            <div className={styled.card}>\n              {data?.map(el => (\n                <ClinicCard\n                  key={el.node?.id || \"\"}\n                  id={el.node?.id || \"\"}\n                  name={el.node?.name || \"\"}\n                  county={el.node?.county || \"\"}\n                  town={el.node?.town || \"\"}\n                  caseCount={el.node?.caseCount || 0}\n                  consultReplyCount={el.node?.consultReplyCount || 0}\n                />\n              ))}\n            </div>\n            <div className={styled.filter}>\n              <Button className={styled.button} onClick={() => setOpenFilter(true)}>\n                <Icon name=\"funnel\" className={styled.funnel} />\n                地區篩選\n              </Button>\n              <DistrictsFilter\n                open={openFilter}\n                onClose={value => {\n                  setOpenFilter(false)\n\n                  if (value.length === 0) {\n                    setIsSearch(false)\n                    return\n                  }\n                  loadGetClinicsQuerySearch({\n                    variables: {\n                      county: value\n                        .map(el => el.county)\n                        .filter((value, index, self) => self.indexOf(value) === index),\n                      town: value.map(el => el.town),\n                    },\n                  })\n                  setIsSearch(true)\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {auth.user.clinic ? <Toolbars.Clinic /> : <Toolbars />}\n    </>\n  )\n}\nexport default Clinic\n","import * as Types from \"../../../types/schema\"\n\nimport { gql } from \"@apollo/client\"\nimport * as Apollo from \"@apollo/client\"\nconst defaultOptions = {} as const\nexport type UserInboxesFragment = {\n  __typename: \"ConsultExt\"\n  userInboxes?: Array<{\n    __typename: \"UserInbox\"\n    id?: string | null\n    read: boolean\n    readAt: number\n    topicId?: string | null\n    replies?: Array<{ __typename: \"ConsultTopicReply\"; content?: string | null } | null> | null\n    clinic?: { __typename: \"Clinic\"; id?: string | null; name?: string | null } | null\n  } | null> | null\n}\n\nexport type GetMemberInboxQueryVariables = Types.Exact<{ [key: string]: never }>\n\nexport type GetMemberInboxQuery = {\n  me?: {\n    __typename: \"User\"\n    consults?: Array<{\n      __typename: \"ConsultExt\"\n      id?: string | null\n      subject?: string | null\n      content?: string | null\n      days: number\n      images?: Array<string | null> | null\n      oneOnOne: boolean\n      userInboxes?: Array<{\n        __typename: \"UserInbox\"\n        id?: string | null\n        read: boolean\n        readAt: number\n        topicId?: string | null\n        replies?: Array<{ __typename: \"ConsultTopicReply\"; content?: string | null } | null> | null\n        clinic?: { __typename: \"Clinic\"; id?: string | null; name?: string | null } | null\n      } | null> | null\n    } | null> | null\n  } | null\n}\n\nexport const UserInboxesFragmentDoc = gql`\n  fragment UserInboxes on ConsultExt {\n    userInboxes {\n      id\n      read\n      readAt\n      topicId\n      replies {\n        content\n      }\n      clinic {\n        id\n        name\n      }\n    }\n  }\n`\nexport const GetMemberInboxDocument = gql`\n  query GetMemberInbox {\n    me {\n      consults {\n        id\n        subject\n        content\n        days\n        images\n        oneOnOne\n        ...UserInboxes\n      }\n    }\n  }\n  ${UserInboxesFragmentDoc}\n`\n\n/**\n * __useGetMemberInboxQuery__\n *\n * To run a query within a React component, call `useGetMemberInboxQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetMemberInboxQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetMemberInboxQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetMemberInboxQuery(\n  baseOptions?: Apollo.QueryHookOptions<GetMemberInboxQuery, GetMemberInboxQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useQuery<GetMemberInboxQuery, GetMemberInboxQueryVariables>(\n    GetMemberInboxDocument,\n    options,\n  )\n}\nexport function useGetMemberInboxLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<GetMemberInboxQuery, GetMemberInboxQueryVariables>,\n) {\n  const options = { ...defaultOptions, ...baseOptions }\n  return Apollo.useLazyQuery<GetMemberInboxQuery, GetMemberInboxQueryVariables>(\n    GetMemberInboxDocument,\n    options,\n  )\n}\nexport type GetMemberInboxQueryHookResult = ReturnType<typeof useGetMemberInboxQuery>\nexport type GetMemberInboxLazyQueryHookResult = ReturnType<typeof useGetMemberInboxLazyQuery>\nexport type GetMemberInboxQueryResult = Apollo.QueryResult<\n  GetMemberInboxQuery,\n  GetMemberInboxQueryVariables\n>\n","export type Maybe<T> = T | null\nexport type InputMaybe<T> = Maybe<T>\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> }\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> }\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string\n  String: string\n  Boolean: boolean\n  Int: number\n  Float: number\n  /** The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1. */\n  Long: number\n}\n\n/** A connection to a list of items. */\nexport type ActivitiesConnection = {\n  __typename: \"ActivitiesConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<ActivitiesEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<ClinicActivity>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type ActivitiesEdge = {\n  __typename: \"ActivitiesEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<ClinicActivity>\n}\n\n/** 廠商廣告卡 */\nexport type AdCard = {\n  __typename: \"AdCard\"\n  /** 廣告卡內容 */\n  content?: Maybe<Scalars[\"String\"]>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: Maybe<Scalars[\"String\"]>\n  /** 廣告卡標題 */\n  title?: Maybe<Scalars[\"String\"]>\n}\n\n/** 廠商廣告卡 */\nexport type AdCardFilterInput = {\n  and?: InputMaybe<Array<AdCardFilterInput>>\n  /** 廣告卡內容 */\n  content?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<AdCardFilterInput>>\n  /** 廣告卡標題 */\n  title?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 廠商廣告卡 */\nexport type AdCardSortInput = {\n  /** 廣告卡內容 */\n  content?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<SortEnumType>\n  /** 廣告卡標題 */\n  title?: InputMaybe<SortEnumType>\n}\n\n/** A connection to a list of items. */\nexport type AdCardsConnection = {\n  __typename: \"AdCardsConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<AdCardsEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<AdCard>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type AdCardsEdge = {\n  __typename: \"AdCardsEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<AdCard>\n}\n\n/** 廣告圖片，包含首頁輪播/症例輪播二種類型 */\nexport type AdImage = {\n  __typename: \"AdImage\"\n  clinic?: Maybe<Clinic>\n  /** 所屬診所 */\n  clinicId?: Maybe<Scalars[\"String\"]>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: Maybe<Scalars[\"String\"]>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: Maybe<Scalars[\"String\"]>\n  /** 排序 */\n  sort: Scalars[\"Int\"]\n  /** 狀態： true 為開啟，false 為關閉 */\n  status: Scalars[\"Boolean\"]\n  /** 點擊後轉址目標識別碼 */\n  targetId?: Maybe<Scalars[\"String\"]>\n  /** 標題 */\n  title?: Maybe<Scalars[\"String\"]>\n  /** 廣告圖片用途，如：首頁輪播/診所輪播/症例輪播 */\n  usageType?: Maybe<Scalars[\"String\"]>\n}\n\n/** 廣告圖片，包含首頁輪播/症例輪播二種類型 */\nexport type AdImageFilterInput = {\n  and?: InputMaybe<Array<AdImageFilterInput>>\n  /** 所屬診所 */\n  clinicId?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<AdImageFilterInput>>\n  parentField?: InputMaybe<StringOperationFilterInput>\n  parentId?: InputMaybe<StringOperationFilterInput>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: InputMaybe<StringOperationFilterInput>\n  /** 排序 */\n  sort?: InputMaybe<ComparableInt32OperationFilterInput>\n  /** 狀態： true 為開啟，false 為關閉 */\n  status?: InputMaybe<BooleanOperationFilterInput>\n  /** 點擊後轉址目標識別碼 */\n  targetId?: InputMaybe<StringOperationFilterInput>\n  /** 標題 */\n  title?: InputMaybe<StringOperationFilterInput>\n  /** 廣告圖片用途，如：首頁輪播/診所輪播/症例輪播 */\n  usageType?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 廣告圖片，包含首頁輪播/症例輪播二種類型 */\nexport type AdImageSortInput = {\n  /** 所屬診所 */\n  clinicId?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: InputMaybe<SortEnumType>\n  /** 排序 */\n  sort?: InputMaybe<SortEnumType>\n  /** 狀態： true 為開啟，false 為關閉 */\n  status?: InputMaybe<SortEnumType>\n  /** 點擊後轉址目標識別碼 */\n  targetId?: InputMaybe<SortEnumType>\n  /** 標題 */\n  title?: InputMaybe<SortEnumType>\n  /** 廣告圖片用途，如：首頁輪播/診所輪播/症例輪播 */\n  usageType?: InputMaybe<SortEnumType>\n}\n\n/** A connection to a list of items. */\nexport type AdImagesConnection = {\n  __typename: \"AdImagesConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<AdImagesEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<AdImage>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type AdImagesEdge = {\n  __typename: \"AdImagesEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<AdImage>\n}\n\n/** 新增診所活動頁 */\nexport type AddActivityInput = {\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 活動內容 */\n  content?: InputMaybe<Scalars[\"String\"]>\n  /** 活動圖片 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 活動主題 */\n  subject?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddActivityPayload = {\n  __typename: \"AddActivityPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增廠商廣告卡參數 */\nexport type AddAdCardInput = {\n  /** 廣告內容 */\n  content?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告標題 */\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddAdCardPayload = {\n  __typename: \"AddAdCardPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增廣告圖片參數 */\nexport type AddAdImageInput = {\n  /** 所屬診所 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: InputMaybe<Scalars[\"String\"]>\n  /** 排序 */\n  sort: Scalars[\"Int\"]\n  /** 狀態： true 開啟，false 關閉 */\n  status: Scalars[\"Boolean\"]\n  /** 點擊後轉址目標識別碼 */\n  targetId?: InputMaybe<Scalars[\"String\"]>\n  /** 標題 */\n  title?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告圖片用途，如：首頁輪播/診所輪播/症例輪播 */\n  usageType?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddAdImagePayload = {\n  __typename: \"AddAdImagePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 問卷回覆 */\nexport type AddAnswerInput = {\n  /** 答覆 */\n  answers?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 問卷識別碼 */\n  questionId?: InputMaybe<Scalars[\"String\"]>\n  /** 回答者識別碼 */\n  userId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 問卷回覆結果 */\nexport type AddAnswerPayload = {\n  __typename: \"AddAnswerPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type AddCaseInput = {\n  /** 案例分類 */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 案例描述 */\n  description?: InputMaybe<Scalars[\"String\"]>\n  /** 是否被設為熱門案例 */\n  hot: Scalars[\"Boolean\"]\n  /** 案例照 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 案例照關鍵字 */\n  imageText?: InputMaybe<Scalars[\"String\"]>\n  /** 病例標題 */\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddCasePayload = {\n  __typename: \"AddCasePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增小分類 */\nexport type AddCategoryInput = {\n  /** 小分類名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 所屬中分類識別碼 */\n  secondCategoryId?: InputMaybe<Scalars[\"String\"]>\n  /** 所屬大分類識別碼 */\n  topCategoryId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 新增小分類結果 */\nexport type AddCategoryPayload = {\n  __typename: \"AddCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 使用者裝置輸入資訊 */\nexport type AddClientTokenInput = {\n  /** 使用者裝置識別碼 */\n  clientToken?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 使用者新增裝置輸出資訊 */\nexport type AddClientTokenPayload = {\n  __typename: \"AddClientTokenPayload\"\n  /** 使用者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增診所圖片參數 */\nexport type AddClinicImageInput = {\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 診所圖片網址 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: InputMaybe<Scalars[\"String\"]>\n  /** 排序 */\n  sort: Scalars[\"Int\"]\n  /** 狀態。true 開啟 false 關閉 */\n  status: Scalars[\"Boolean\"]\n  /** 點擊後轉址目標識別碼 */\n  targetId?: InputMaybe<Scalars[\"String\"]>\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 新增診所圖片結果 */\nexport type AddClinicImagePayload = {\n  __typename: \"AddClinicImagePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type AddClinicInput = {\n  /** 診所地址 */\n  address?: InputMaybe<Scalars[\"String\"]>\n  /** 診所小分類 */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 聯絡人信箱 */\n  contactEmail?: InputMaybe<Scalars[\"String\"]>\n  /** 聯絡人姓名 */\n  contactName?: InputMaybe<Scalars[\"String\"]>\n  /** 聯絡人電話 */\n  contactPhone?: InputMaybe<Scalars[\"String\"]>\n  /** 診所縣市 */\n  county?: InputMaybe<Scalars[\"String\"]>\n  /** 診所䢗述 */\n  description?: InputMaybe<Scalars[\"String\"]>\n  /** 診所名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 診所管理人電子郵件信箱 */\n  ownerEmail?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 診所電話 */\n  phone?: InputMaybe<Scalars[\"String\"]>\n  /** 診所鄉鎮市區 */\n  town?: InputMaybe<Scalars[\"String\"]>\n  /** 診所網站網址 */\n  web?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddClinicPayload = {\n  __typename: \"AddClinicPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增諮詢輸入資料 */\nexport type AddConsultInput = {\n  /**\n   * 諮詢小分類\n   * ///\n   */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 諮詢內容 */\n  content: Scalars[\"String\"]\n  /** 諮詢縣市範圍 */\n  counties?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 諮詢天數 */\n  days: Scalars[\"Int\"]\n  enable?: InputMaybe<Scalars[\"Boolean\"]>\n  expiresIn?: InputMaybe<Scalars[\"Long\"]>\n  /** 諮詢圖片 */\n  images?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 諮詢標題 */\n  subject: Scalars[\"String\"]\n  /** 諮詢者識別碼，對應 User.Id */\n  userId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 新增諮詢完成回覆 */\nexport type AddConsultPayload = {\n  __typename: \"AddConsultPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 診所回覆，會先產生一個 topic */\nexport type AddConsultTopicInput = {\n  /** 診所識別碼，對應 Clinic.Id */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 諮詢識別碼，對應 Consult.Id */\n  consultId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddConsultTopicPayload = {\n  __typename: \"AddConsultTopicPayload\"\n  /** 新建立的 Topic.Id */\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type AddDoctorInput = {\n  /** 所屬診所 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 醫師專長，自填 */\n  expertise?: InputMaybe<Scalars[\"String\"]>\n  /** 姓名 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 照片 */\n  photo?: InputMaybe<Scalars[\"String\"]>\n  /** 學經歷 */\n  resumes?: InputMaybe<Scalars[\"String\"]>\n  /** 頭銜 */\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddDoctorPayload = {\n  __typename: \"AddDoctorPayload\"\n  /** 診所識別碼 */\n  clinicId?: Maybe<Scalars[\"String\"]>\n  /** 醫師識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 醫師姓名 */\n  name?: Maybe<Scalars[\"String\"]>\n}\n\n/** 關鍵字輸入 */\nexport type AddPopularKeywordInput = {\n  /** 關鍵字 */\n  keyword?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 關鍵字回覆 */\nexport type AddPopularKeywordPayload = {\n  __typename: \"AddPopularKeywordPayload\"\n  /** 新增關鍵字 */\n  keyword?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增貼文內容 */\nexport type AddPostInput = {\n  /** 發文內容 */\n  content?: InputMaybe<Scalars[\"String\"]>\n  /** 標題 */\n  subject?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 新增貼文回覆 */\nexport type AddPostPayload = {\n  __typename: \"AddPostPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type AddQuestionInput = {\n  /** 問卷題目 */\n  items?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n}\n\nexport type AddQuestionPayload = {\n  __typename: \"AddQuestionPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增中分類 */\nexport type AddSecondCategoryInput = {\n  /** 中分類名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 所屬大分類識別碼 */\n  topCategoryId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 新增中分類結果 */\nexport type AddSecondCategoryPayload = {\n  __typename: \"AddSecondCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 新增大分類 */\nexport type AddTopCategoryInput = {\n  /** 大分類名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 新增大分類結果 */\nexport type AddTopCategoryPayload = {\n  __typename: \"AddTopCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type AddUserInput = {\n  /** 使用者所使用的裝識識別碼，用於接收 firebase 訊息用 */\n  clientToken?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 使用者姓名 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 使用者電話 */\n  phone?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type AddUserPayload = {\n  __typename: \"AddUserPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 問卷回覆 */\nexport type Answer = {\n  __typename: \"Answer\"\n  /** 答覆 */\n  answers?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  parentField?: Maybe<Scalars[\"String\"]>\n  parentId?: Maybe<Scalars[\"String\"]>\n  /** 取得問題 */\n  question?: Maybe<Question>\n  /** 問卷識別碼 */\n  questionId?: Maybe<Scalars[\"String\"]>\n  /** 取得回覆者 */\n  responder?: Maybe<User>\n  /** 回答者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\n/** 問卷回覆 */\nexport type AnswerFilterInput = {\n  and?: InputMaybe<Array<AnswerFilterInput>>\n  /** 答覆 */\n  answers?: InputMaybe<ListStringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<AnswerFilterInput>>\n  parentField?: InputMaybe<StringOperationFilterInput>\n  parentId?: InputMaybe<StringOperationFilterInput>\n  /** 問卷識別碼 */\n  questionId?: InputMaybe<StringOperationFilterInput>\n  /** 回答者識別碼 */\n  userId?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 問卷回覆 */\nexport type AnswerSortInput = {\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 問卷識別碼 */\n  questionId?: InputMaybe<SortEnumType>\n  /** 回答者識別碼 */\n  userId?: InputMaybe<SortEnumType>\n}\n\n/** A connection to a list of items. */\nexport type AnswersByQuestionIdConnection = {\n  __typename: \"AnswersByQuestionIdConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<AnswersByQuestionIdEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<Answer>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type AnswersByQuestionIdEdge = {\n  __typename: \"AnswersByQuestionIdEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<Answer>\n}\n\nexport enum ApplyPolicy {\n  AfterResolver = \"AFTER_RESOLVER\",\n  BeforeResolver = \"BEFORE_RESOLVER\",\n}\n\nexport type BooleanOperationFilterInput = {\n  eq?: InputMaybe<Scalars[\"Boolean\"]>\n  neq?: InputMaybe<Scalars[\"Boolean\"]>\n}\n\n/** A connection to a list of items. */\nexport type CasesConnection = {\n  __typename: \"CasesConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<CasesEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<ClinicCase>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type CasesEdge = {\n  __typename: \"CasesEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<ClinicCase>\n}\n\n/** 小分類 */\nexport type Category = {\n  __typename: \"Category\"\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 小分類名稱 */\n  name?: Maybe<Scalars[\"String\"]>\n  /** 所屬中分類 */\n  secondCategoryId?: Maybe<Scalars[\"String\"]>\n  /** 大分類 */\n  topCategoryId?: Maybe<Scalars[\"String\"]>\n  /** 由 id 取出之唯一數字值 */\n  uniqueNumber: Scalars[\"Long\"]\n}\n\n/** 診所資訊 */\nexport type Clinic = {\n  __typename: \"Clinic\"\n  /** 取得診所活動頁 */\n  activities?: Maybe<Array<Maybe<ClinicActivity>>>\n  /** 取得診所所屬廣告 */\n  adImages?: Maybe<Array<Maybe<AdImage>>>\n  /** 診所地址 （路巷號樓） */\n  address?: Maybe<Scalars[\"String\"]>\n  /** 取得診所案例數 */\n  caseCount: Scalars[\"Long\"]\n  /** 取得診所案例 */\n  cases?: Maybe<Array<Maybe<ClinicCase>>>\n  /** 取得診所小分類 */\n  categories?: Maybe<Array<Maybe<Category>>>\n  /** 取得診所回覆諮詢數 */\n  consultReplyCount: Scalars[\"Long\"]\n  /** 聯絡人信箱 */\n  contactEmail?: Maybe<Scalars[\"String\"]>\n  /** 聯絡人姓名 */\n  contactName?: Maybe<Scalars[\"String\"]>\n  /** 聯絡人電話 */\n  contactPhone?: Maybe<Scalars[\"String\"]>\n  /** 地址（縣/市） */\n  county?: Maybe<Scalars[\"String\"]>\n  /** 診所說明 */\n  description?: Maybe<Scalars[\"String\"]>\n  /** 取得診所醫生群 */\n  doctors?: Maybe<Array<Maybe<ClinicDoctor>>>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 取得診所圖片 */\n  images?: Maybe<Array<Maybe<ClinicImage>>>\n  /** 最後付費時間 */\n  latestPayAt: Scalars[\"Long\"]\n  /** 診所名稱 */\n  name?: Maybe<Scalars[\"String\"]>\n  /** 診所管理員 */\n  owners?: Maybe<Array<Maybe<User>>>\n  /** 是否已付費 */\n  paid: Scalars[\"Boolean\"]\n  /** 付費組數 */\n  paySets: Scalars[\"Int\"]\n  /** 診所電話 */\n  phone?: Maybe<Scalars[\"String\"]>\n  /** 地址（鄉縣市區） */\n  town?: Maybe<Scalars[\"String\"]>\n  /** 診所主網頁 */\n  web?: Maybe<Scalars[\"String\"]>\n}\n\n/** 診所資訊 */\nexport type ClinicDoctorsArgs = {\n  where?: InputMaybe<ClinicDoctorFilterInput>\n}\n\n/** 診所活動頁 */\nexport type ClinicActivity = {\n  __typename: \"ClinicActivity\"\n  /** 取得診所資訊 */\n  clinic?: Maybe<Clinic>\n  /** 活動內容 */\n  content?: Maybe<Scalars[\"String\"]>\n  /** 取得活動建立時間，以 epoch 格式取至秒 */\n  createdAt: Scalars[\"Long\"]\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 活動圖片 */\n  image?: Maybe<Scalars[\"String\"]>\n  /** 活動主題 */\n  subject?: Maybe<Scalars[\"String\"]>\n}\n\n/** 診所活動頁 */\nexport type ClinicActivityFilterInput = {\n  and?: InputMaybe<Array<ClinicActivityFilterInput>>\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<StringOperationFilterInput>\n  /** 活動內容 */\n  content?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 活動圖片 */\n  image?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<ClinicActivityFilterInput>>\n  parentField?: InputMaybe<StringOperationFilterInput>\n  parentId?: InputMaybe<StringOperationFilterInput>\n  /** 活動主題 */\n  subject?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 診所活動頁 */\nexport type ClinicActivitySortInput = {\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<SortEnumType>\n  /** 活動內容 */\n  content?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 活動圖片 */\n  image?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 活動主題 */\n  subject?: InputMaybe<SortEnumType>\n}\n\n/** 診所病例 */\nexport type ClinicCase = {\n  __typename: \"ClinicCase\"\n  /** 相關小分類 */\n  categories?: Maybe<Array<Maybe<Category>>>\n  /** 取得診所資訊 */\n  clinic?: Maybe<Clinic>\n  /** 取得被蒐藏數 */\n  collectedCount: Scalars[\"Long\"]\n  /** 案例描述 */\n  description?: Maybe<Scalars[\"String\"]>\n  /** 是否被設為熱門案例 */\n  hot: Scalars[\"Boolean\"]\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 案例照 */\n  image?: Maybe<Scalars[\"String\"]>\n  /** 案例照關鍵字 */\n  imageText?: Maybe<Scalars[\"String\"]>\n  /** 病例標題 */\n  title?: Maybe<Scalars[\"String\"]>\n}\n\n/** 診所病例 */\nexport type ClinicCaseFilterInput = {\n  and?: InputMaybe<Array<ClinicCaseFilterInput>>\n  /** 案例分類 */\n  categories?: InputMaybe<ListStringOperationFilterInput>\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<StringOperationFilterInput>\n  /** 案例描述 */\n  description?: InputMaybe<StringOperationFilterInput>\n  /** 是否被設為熱門案例 */\n  hot?: InputMaybe<BooleanOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 案例照 */\n  image?: InputMaybe<StringOperationFilterInput>\n  /** 案例照關鍵字 */\n  imageText?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<ClinicCaseFilterInput>>\n  parentField?: InputMaybe<StringOperationFilterInput>\n  parentId?: InputMaybe<StringOperationFilterInput>\n  /** 病例標題 */\n  title?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 診所病例 */\nexport type ClinicCaseSortInput = {\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<SortEnumType>\n  /** 案例描述 */\n  description?: InputMaybe<SortEnumType>\n  /** 是否被設為熱門案例 */\n  hot?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 案例照 */\n  image?: InputMaybe<SortEnumType>\n  /** 案例照關鍵字 */\n  imageText?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 病例標題 */\n  title?: InputMaybe<SortEnumType>\n}\n\n/** 診所諮詢討論串。一間診所可以針對一個諮詢問題建立一個討論串 */\nexport type ClinicConsultTopic = {\n  __typename: \"ClinicConsultTopic\"\n  clinic?: Maybe<Clinic>\n  /** 取得父項諮詢 */\n  consult?: Maybe<Consult>\n  /** 諮詢識別碼，對應 Consult.Id */\n  consultId?: Maybe<Scalars[\"String\"]>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  replies?: Maybe<Array<Maybe<ConsultTopicReply>>>\n  /** 討論串最後回覆時間 */\n  replyAt: Scalars[\"Long\"]\n  /** 諮詢者是否已讀 */\n  userRead: Scalars[\"Boolean\"]\n}\n\n/** 診所諮詢討論串。一間診所可以針對一個諮詢問題建立一個討論串 */\nexport type ClinicConsultTopicFilterInput = {\n  and?: InputMaybe<Array<ClinicConsultTopicFilterInput>>\n  /** 診所識別碼，對應 Clinic.Id */\n  clinicId?: InputMaybe<StringOperationFilterInput>\n  /** 諮詢識別碼，對應 Consult.Id */\n  consultId?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<ClinicConsultTopicFilterInput>>\n  parentField?: InputMaybe<StringOperationFilterInput>\n  parentId?: InputMaybe<StringOperationFilterInput>\n  /** 討論串最後回覆時間 */\n  replyAt?: InputMaybe<ComparableInt64OperationFilterInput>\n  /** 諮詢者是否已讀 */\n  userRead?: InputMaybe<BooleanOperationFilterInput>\n}\n\n/** 診所諮詢討論串。一間診所可以針對一個諮詢問題建立一個討論串 */\nexport type ClinicConsultTopicSortInput = {\n  /** 診所識別碼，對應 Clinic.Id */\n  clinicId?: InputMaybe<SortEnumType>\n  /** 諮詢識別碼，對應 Consult.Id */\n  consultId?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 討論串最後回覆時間 */\n  replyAt?: InputMaybe<SortEnumType>\n  /** 諮詢者是否已讀 */\n  userRead?: InputMaybe<SortEnumType>\n}\n\n/** 駐院醫師 */\nexport type ClinicDoctor = {\n  __typename: \"ClinicDoctor\"\n  /** 醫生所屬診所 */\n  clinic?: Maybe<Clinic>\n  /** 醫師專長，自填 */\n  expertise?: Maybe<Scalars[\"String\"]>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 姓名 */\n  name?: Maybe<Scalars[\"String\"]>\n  /** 玉照 */\n  photo?: Maybe<Scalars[\"String\"]>\n  /** 經歷 */\n  resumes?: Maybe<Scalars[\"String\"]>\n  /** 醫師頭銜 */\n  title?: Maybe<Scalars[\"String\"]>\n}\n\n/** 駐院醫師 */\nexport type ClinicDoctorFilterInput = {\n  and?: InputMaybe<Array<ClinicDoctorFilterInput>>\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<StringOperationFilterInput>\n  /** 醫師專長，自填 */\n  expertise?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 姓名 */\n  name?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<ClinicDoctorFilterInput>>\n  parentField?: InputMaybe<StringOperationFilterInput>\n  parentId?: InputMaybe<StringOperationFilterInput>\n  /** 玉照 */\n  photo?: InputMaybe<StringOperationFilterInput>\n  /** 經歷 */\n  resumes?: InputMaybe<StringOperationFilterInput>\n  /** 醫師頭銜 */\n  title?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 駐院醫師 */\nexport type ClinicDoctorSortInput = {\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<SortEnumType>\n  /** 醫師專長，自填 */\n  expertise?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 姓名 */\n  name?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 玉照 */\n  photo?: InputMaybe<SortEnumType>\n  /** 經歷 */\n  resumes?: InputMaybe<SortEnumType>\n  /** 醫師頭銜 */\n  title?: InputMaybe<SortEnumType>\n}\n\n/** 診所資訊 */\nexport type ClinicFilterInput = {\n  /** 診所地址 （路巷號樓） */\n  address?: InputMaybe<StringOperationFilterInput>\n  and?: InputMaybe<Array<ClinicFilterInput>>\n  /** 診所案例數 */\n  caseCount?: InputMaybe<ComparableInt32OperationFilterInput>\n  /** 診所小分類 */\n  categories?: InputMaybe<ListStringOperationFilterInput>\n  /** 諮詢回覆數 */\n  consultReplyCount?: InputMaybe<ComparableInt32OperationFilterInput>\n  /** 聯絡人信箱 */\n  contactEmail?: InputMaybe<StringOperationFilterInput>\n  /** 聯絡人姓名 */\n  contactName?: InputMaybe<StringOperationFilterInput>\n  /** 聯絡人電話 */\n  contactPhone?: InputMaybe<StringOperationFilterInput>\n  /** 地址（縣/市） */\n  county?: InputMaybe<StringOperationFilterInput>\n  /** 診所說明 */\n  description?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 最後付費時間 */\n  latestPayAt?: InputMaybe<ComparableInt64OperationFilterInput>\n  /** 診所名稱 */\n  name?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<ClinicFilterInput>>\n  /** 管理者電子郵件，必須使用此郵件登入之帳號才視為該診所之管理者 */\n  ownerEmail?: InputMaybe<ListStringOperationFilterInput>\n  /** 是否已付費 */\n  paid?: InputMaybe<BooleanOperationFilterInput>\n  /** 付費組數 */\n  paySets?: InputMaybe<ComparableInt32OperationFilterInput>\n  /** 診所電話 */\n  phone?: InputMaybe<StringOperationFilterInput>\n  /** 地址（鄉縣市區） */\n  town?: InputMaybe<StringOperationFilterInput>\n  /** 診所主網頁 */\n  web?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 診所圖片 */\nexport type ClinicImage = {\n  __typename: \"ClinicImage\"\n  /** 取診所資訊 */\n  clinic?: Maybe<Clinic>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: Maybe<Scalars[\"String\"]>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: Maybe<Scalars[\"String\"]>\n  /** 排序 */\n  sort: Scalars[\"Int\"]\n  /** 狀態。true 開啟 false 關閉 */\n  status: Scalars[\"Boolean\"]\n  /** 點擊後轉址目標識別碼 */\n  targetId?: Maybe<Scalars[\"String\"]>\n  /** 標題 */\n  title?: Maybe<Scalars[\"String\"]>\n}\n\n/** 診所信箱 */\nexport type ClinicInbox = {\n  __typename: \"ClinicInbox\"\n  /** 取診所資訊 */\n  clinic?: Maybe<Clinic>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 會員最後發信時間 */\n  lastReplyAt: Scalars[\"Long\"]\n  /** 是否已被讀取 */\n  read: Scalars[\"Boolean\"]\n  /** 讀取時間 */\n  readAt: Scalars[\"Long\"]\n  /** 最後回覆是否為發文者，true 為發文者回 */\n  replyByPoster: Scalars[\"Boolean\"]\n  /** 取得討論串資訊 */\n  topic?: Maybe<ClinicConsultTopic>\n  /** 取得寄信人 */\n  user?: Maybe<User>\n  /** 寄件者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\n/** A connection to a list of items. */\nexport type ClinicInboxConnection = {\n  __typename: \"ClinicInboxConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<ClinicInboxEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<ClinicInbox>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type ClinicInboxEdge = {\n  __typename: \"ClinicInboxEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<ClinicInbox>\n}\n\n/** 診所信箱 */\nexport type ClinicInboxFilterInput = {\n  and?: InputMaybe<Array<ClinicInboxFilterInput>>\n  /** 診所識別碼 */\n  clinicId?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 會員最後發信時間 */\n  lastReplyAt?: InputMaybe<ComparableInt64OperationFilterInput>\n  or?: InputMaybe<Array<ClinicInboxFilterInput>>\n  parentField?: InputMaybe<StringOperationFilterInput>\n  parentId?: InputMaybe<StringOperationFilterInput>\n  /** 是否已被讀取 */\n  read?: InputMaybe<BooleanOperationFilterInput>\n  /** 讀取時間 */\n  readAt?: InputMaybe<ComparableInt64OperationFilterInput>\n  /** 最後回覆是否為發文者，true 為發文者回 */\n  replyByPoster?: InputMaybe<BooleanOperationFilterInput>\n  /** 診所諮詢討論串識別碼 */\n  topicId?: InputMaybe<StringOperationFilterInput>\n  /** 寄件者識別碼 */\n  userId?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 診所信箱 */\nexport type ClinicInboxSortInput = {\n  /** 診所識別碼 */\n  clinicId?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 會員最後發信時間 */\n  lastReplyAt?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 是否已被讀取 */\n  read?: InputMaybe<SortEnumType>\n  /** 讀取時間 */\n  readAt?: InputMaybe<SortEnumType>\n  /** 最後回覆是否為發文者，true 為發文者回 */\n  replyByPoster?: InputMaybe<SortEnumType>\n  /** 診所諮詢討論串識別碼 */\n  topicId?: InputMaybe<SortEnumType>\n  /** 寄件者識別碼 */\n  userId?: InputMaybe<SortEnumType>\n}\n\n/** 診所資訊 */\nexport type ClinicSortInput = {\n  /** 診所地址 （路巷號樓） */\n  address?: InputMaybe<SortEnumType>\n  /** 診所案例數 */\n  caseCount?: InputMaybe<SortEnumType>\n  /** 諮詢回覆數 */\n  consultReplyCount?: InputMaybe<SortEnumType>\n  /** 聯絡人信箱 */\n  contactEmail?: InputMaybe<SortEnumType>\n  /** 聯絡人姓名 */\n  contactName?: InputMaybe<SortEnumType>\n  /** 聯絡人電話 */\n  contactPhone?: InputMaybe<SortEnumType>\n  /** 地址（縣/市） */\n  county?: InputMaybe<SortEnumType>\n  /** 診所說明 */\n  description?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 最後付費時間 */\n  latestPayAt?: InputMaybe<SortEnumType>\n  /** 診所名稱 */\n  name?: InputMaybe<SortEnumType>\n  /** 是否已付費 */\n  paid?: InputMaybe<SortEnumType>\n  /** 付費組數 */\n  paySets?: InputMaybe<SortEnumType>\n  /** 診所電話 */\n  phone?: InputMaybe<SortEnumType>\n  /** 地址（鄉縣市區） */\n  town?: InputMaybe<SortEnumType>\n  /** 診所主網頁 */\n  web?: InputMaybe<SortEnumType>\n}\n\n/** A connection to a list of items. */\nexport type ClinicsConnection = {\n  __typename: \"ClinicsConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<ClinicsEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<Clinic>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type ClinicsEdge = {\n  __typename: \"ClinicsEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<Clinic>\n}\n\n/** 使用者蒐集案例輸入內容 */\nexport type CollectCaseInput = {\n  /** 蒐集案例識別碼 */\n  caseId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 使用者蒐集案例回覆 */\nexport type CollectCasePayload = {\n  __typename: \"CollectCasePayload\"\n  /** 案例被收藏的次數 */\n  collectedCount: Scalars[\"Long\"]\n  /** 使用者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\nexport type ComparableInt32OperationFilterInput = {\n  eq?: InputMaybe<Scalars[\"Int\"]>\n  gt?: InputMaybe<Scalars[\"Int\"]>\n  gte?: InputMaybe<Scalars[\"Int\"]>\n  in?: InputMaybe<Array<Scalars[\"Int\"]>>\n  lt?: InputMaybe<Scalars[\"Int\"]>\n  lte?: InputMaybe<Scalars[\"Int\"]>\n  neq?: InputMaybe<Scalars[\"Int\"]>\n  ngt?: InputMaybe<Scalars[\"Int\"]>\n  ngte?: InputMaybe<Scalars[\"Int\"]>\n  nin?: InputMaybe<Array<Scalars[\"Int\"]>>\n  nlt?: InputMaybe<Scalars[\"Int\"]>\n  nlte?: InputMaybe<Scalars[\"Int\"]>\n}\n\nexport type ComparableInt64OperationFilterInput = {\n  eq?: InputMaybe<Scalars[\"Long\"]>\n  gt?: InputMaybe<Scalars[\"Long\"]>\n  gte?: InputMaybe<Scalars[\"Long\"]>\n  in?: InputMaybe<Array<Scalars[\"Long\"]>>\n  lt?: InputMaybe<Scalars[\"Long\"]>\n  lte?: InputMaybe<Scalars[\"Long\"]>\n  neq?: InputMaybe<Scalars[\"Long\"]>\n  ngt?: InputMaybe<Scalars[\"Long\"]>\n  ngte?: InputMaybe<Scalars[\"Long\"]>\n  nin?: InputMaybe<Array<Scalars[\"Long\"]>>\n  nlt?: InputMaybe<Scalars[\"Long\"]>\n  nlte?: InputMaybe<Scalars[\"Long\"]>\n}\n\n/** 會員諮詢 */\nexport type Consult = {\n  __typename: \"Consult\"\n  /** 取得所屬小分類 */\n  categories?: Maybe<Array<Maybe<Category>>>\n  /** 取得諮詢時間 */\n  consultAt: Scalars[\"Long\"]\n  /** 諮詢內容 */\n  content?: Maybe<Scalars[\"String\"]>\n  /** 諮詢縣市範圍 */\n  counties?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n  /** 諮詢天數 */\n  days: Scalars[\"Int\"]\n  /** 是否開啟 */\n  enable: Scalars[\"Boolean\"]\n  /** 開啟到期時間 */\n  expiresIn: Scalars[\"Long\"]\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 諮詢圖片 */\n  images?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n  /** 是否為一對一諮詢 */\n  oneOnOne: Scalars[\"Boolean\"]\n  /** 取得發文者 */\n  poster?: Maybe<User>\n  /** 諮詢標題 */\n  subject?: Maybe<Scalars[\"String\"]>\n  /** 取得診所諮詢討論 */\n  topics?: Maybe<Array<Maybe<ClinicConsultTopic>>>\n}\n\nexport type ConsultClinicInput = {\n  /**\n   * 諮詢小分類\n   * ///\n   */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 診所識別碼 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 諮詢內容 */\n  content: Scalars[\"String\"]\n  /** 諮詢縣市範圍 */\n  counties?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 諮詢天數 */\n  days: Scalars[\"Int\"]\n  enable?: InputMaybe<Scalars[\"Boolean\"]>\n  expiresIn?: InputMaybe<Scalars[\"Long\"]>\n  /** 諮詢圖片 */\n  images?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 諮詢標題 */\n  subject: Scalars[\"String\"]\n  /** 諮詢者識別碼，對應 User.Id */\n  userId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type ConsultClinicPayload = {\n  __typename: \"ConsultClinicPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n  /** 診所話題識別碼，對應 ClinicConsultTopic.Id */\n  topicId?: Maybe<Scalars[\"String\"]>\n}\n\nexport type ConsultExt = {\n  __typename: \"ConsultExt\"\n  /** 取得所屬小分類 */\n  categories?: Maybe<Array<Maybe<Category>>>\n  /** 取得諮詢時間 */\n  consultAt: Scalars[\"Long\"]\n  /** 諮詢內容 */\n  content?: Maybe<Scalars[\"String\"]>\n  /** 諮詢縣市範圍 */\n  counties?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n  /** 諮詢天數 */\n  days: Scalars[\"Int\"]\n  /** 是否開啟 */\n  enable: Scalars[\"Boolean\"]\n  /** 開啟到期時間 */\n  expiresIn: Scalars[\"Long\"]\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 諮詢圖片 */\n  images?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n  /** 是否為一對一諮詢 */\n  oneOnOne: Scalars[\"Boolean\"]\n  /** 取得發文者 */\n  poster?: Maybe<User>\n  /** 諮詢標題 */\n  subject?: Maybe<Scalars[\"String\"]>\n  /** 取得診所諮詢討論 */\n  topics?: Maybe<Array<Maybe<ClinicConsultTopic>>>\n  /** 使用者諮詢收件夾 */\n  userInboxes?: Maybe<Array<Maybe<UserInbox>>>\n}\n\n/** 討論串回覆 */\nexport type ConsultTopicReply = {\n  __typename: \"ConsultTopicReply\"\n  /** 回覆內容 */\n  content?: Maybe<Scalars[\"String\"]>\n  /** 回覆內容類型，可為 image 或 text */\n  contentType?: Maybe<Scalars[\"String\"]>\n  /** 取得回覆時間 */\n  createdAt: Scalars[\"Long\"]\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 訊息已讀時間 */\n  readAt: Scalars[\"Long\"]\n  /** 取得回覆者 */\n  replier?: Maybe<User>\n  /** 取得回覆診所 */\n  topic?: Maybe<ClinicConsultTopic>\n  /** 討論串識別碼，對應 ClinicConsultTopic.Id */\n  topicId?: Maybe<Scalars[\"String\"]>\n  /** 回覆者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\n/** 以 email + password 建立 firebase 使用者 */\nexport type CreateUserWithEmailAndPasswordInput = {\n  /** 使用者信箱 */\n  email?: InputMaybe<Scalars[\"String\"]>\n  /** 使用者密碼 */\n  password?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 以 email + password 建立 firebase 使用者 */\nexport type CreateUserWithEmailAndPasswordPayload = {\n  __typename: \"CreateUserWithEmailAndPasswordPayload\"\n  /** Firebase token */\n  firebaseToken?: Maybe<Scalars[\"String\"]>\n}\n\n/** 客製化 token 內容 */\nexport type CustomTokenPayload = {\n  __typename: \"CustomTokenPayload\"\n  /** 客製完成 token 字串 */\n  customToken?: Maybe<Scalars[\"String\"]>\n  /** Firebase uid */\n  uid?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除診所活動頁 */\nexport type DeleteActivityInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteActivityPayload = {\n  __typename: \"DeleteActivityPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除廠商廣告卡參數 */\nexport type DeleteAdCardInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteAdCardPayload = {\n  __typename: \"DeleteAdCardPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除廣告圖片參數 */\nexport type DeleteAdImageInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteAdImagePayload = {\n  __typename: \"DeleteAdImagePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type DeleteCaseInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteCasePayload = {\n  __typename: \"DeleteCasePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除小分類輸入 */\nexport type DeleteCategoryInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 刪除小分類結果 */\nexport type DeleteCategoryPayload = {\n  __typename: \"DeleteCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 移除使用者裝置輸入資訊 */\nexport type DeleteClientTokenInput = {\n  /** 使用者裝置識別碼 */\n  clientToken?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 移除使用者裝置輸出資訊 */\nexport type DeleteClientTokenPayload = {\n  __typename: \"DeleteClientTokenPayload\"\n  /** 使用者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除診所圖片參數 */\nexport type DeleteClinicImageInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteClinicImagePayload = {\n  __typename: \"DeleteClinicImagePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type DeleteClinicInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteClinicPayload = {\n  __typename: \"DeleteClinicPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type DeleteConsultInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteConsultPayload = {\n  __typename: \"DeleteConsultPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type DeleteDoctorInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteDoctorPayload = {\n  __typename: \"DeleteDoctorPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 關鍵字輸入 */\nexport type DeletePopularKeywordInput = {\n  /** 刪除關鍵字 */\n  keyword?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 關鍵字回覆 */\nexport type DeletePopularKeywordPayload = {\n  __typename: \"DeletePopularKeywordPayload\"\n  /** 已刪除關鍵字尸 */\n  keyword?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除貼文內容 */\nexport type DeletePostInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 刪除貼文回覆 */\nexport type DeletePostPayload = {\n  __typename: \"DeletePostPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除中分類輸入 */\nexport type DeleteSecondCategoryInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 刪除中分類結果 */\nexport type DeleteSecondCategoryPayload = {\n  __typename: \"DeleteSecondCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 刪除大分類輸入 */\nexport type DeleteTopCategoryInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 刪除大分類結果 */\nexport type DeleteTopCategoryPayload = {\n  __typename: \"DeleteTopCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type DeleteUserInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type DeleteUserPayload = {\n  __typename: \"DeleteUserPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** A connection to a list of items. */\nexport type DoctorsConnection = {\n  __typename: \"DoctorsConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<DoctorsEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<ClinicDoctor>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type DoctorsEdge = {\n  __typename: \"DoctorsEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<ClinicDoctor>\n}\n\n/** Email 是否已被註冊 */\nexport type EmailExistsPayload = {\n  __typename: \"EmailExistsPayload\"\n  exists: Scalars[\"Boolean\"]\n}\n\n/** 開關諮詢輸入 */\nexport type EnableConsultInput = {\n  /** 開 true/ 關 false */\n  enable: Scalars[\"Boolean\"]\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** /// 開關結果 */\nexport type EnableConsultPayload = {\n  __typename: \"EnableConsultPayload\"\n  /** 開 true/ 關 false */\n  enable: Scalars[\"Boolean\"]\n  /** 諮詢公開到期日 */\n  expiresIn: Scalars[\"Long\"]\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type ListStringOperationFilterInput = {\n  all?: InputMaybe<StringOperationFilterInput>\n  any?: InputMaybe<Scalars[\"Boolean\"]>\n  none?: InputMaybe<StringOperationFilterInput>\n  some?: InputMaybe<StringOperationFilterInput>\n}\n\nexport type Mutation = {\n  __typename: \"Mutation\"\n  /** [廠商]新增診所活動 */\n  addActivity?: Maybe<AddActivityPayload>\n  /** [廠商]新增廠商廣告卡 */\n  addAdCard?: Maybe<AddAdCardPayload>\n  /** [廠商]新增 Banner 廣告圖 */\n  addAdImage?: Maybe<AddAdImagePayload>\n  /** [會員]問卷回覆 */\n  addAnswer?: Maybe<AddAnswerPayload>\n  /**\n   * [廠商]新增案例。\n   * 錯誤碼 5001: 診所可用組數為 0.\n   * 錯誤碼 5002: 診所已存在案例已達到上限。\n   */\n  addCase?: Maybe<AddCasePayload>\n  /** [廠商]建立小分類 */\n  addCategory?: Maybe<AddCategoryPayload>\n  /** [會員]使用者加入裝置識別碼 */\n  addClientToken?: Maybe<AddClientTokenPayload>\n  /** [廠商]新增診所 */\n  addClinic?: Maybe<AddClinicPayload>\n  /** [廠商]新增診所圖片 */\n  addClinicImage?: Maybe<AddClinicImagePayload>\n  /** [使用者]諮詢 */\n  addConsult?: Maybe<AddConsultPayload>\n  /** [診所管理員]診所第一次諮詢回覆。會先針對該諮詢建立一個診所與該諮詢的話題（topic），日後的來回問答皆會在此話題之中。 */\n  addConsultTopic?: Maybe<AddConsultTopicPayload>\n  /** [廠商]新增診所醫生 */\n  addDoctor?: Maybe<AddDoctorPayload>\n  /** 新增熱門關鍵字 */\n  addPopularKeyword?: Maybe<AddPopularKeywordPayload>\n  /** [廠商]新增發文 */\n  addPost?: Maybe<AddPostPayload>\n  /** [廠商]新增問卷 */\n  addQuestion?: Maybe<AddQuestionPayload>\n  /** [廠商]建立中分類 */\n  addSecondCategory?: Maybe<AddSecondCategoryPayload>\n  /** ［廠商］建立大分類 */\n  addTopCategory?: Maybe<AddTopCategoryPayload>\n  /** [會員註冊]新增使用者，在 firebase 新增完後呼叫此 API 新增 */\n  addUser?: Maybe<AddUserPayload>\n  /** [會員]使用者將指定病例加入蒐藏 */\n  collectCase?: Maybe<CollectCasePayload>\n  /** [會員]一對一諮詢，由使用者直接諮詢診所 */\n  consultClinic?: Maybe<ConsultClinicPayload>\n  /**\n   * 以 Email+Password 建立 firebase 使用者.\n   * 錯誤碼 5001: email 已被註冊且已通過驗證。\n   * 錯誤碼 5002: email 已被註冊但未通過驗證。\n   * 錯誤碼 5003: 註冊帳號失敗。\n   * 錯誤碼 5004: 帳號建立成功，但驗證信發送失敗。\n   */\n  createUserWithEmailAndPassword?: Maybe<CreateUserWithEmailAndPasswordPayload>\n  /** [廠商]刪除診所活動頁 */\n  deleteActivity?: Maybe<DeleteActivityPayload>\n  /** [廠商]刪除廠商廣告卡 */\n  deleteAdCard?: Maybe<DeleteAdCardPayload>\n  /** [廠商]刪除 Banner 廣告圖 */\n  deleteAdImage?: Maybe<DeleteAdImagePayload>\n  /** [廠商]刪除案例 */\n  deleteCase?: Maybe<DeleteCasePayload>\n  /** [廠商]刪除小分類 */\n  deleteCategory?: Maybe<DeleteCategoryPayload>\n  /** [會員]使用者移除裝置識別碼 */\n  deleteClientToken?: Maybe<DeleteClientTokenPayload>\n  /** [廠商]刪除診所 */\n  deleteClinic?: Maybe<DeleteClinicPayload>\n  /** [廠商]刪除診所圖片 */\n  deleteClinicImage?: Maybe<DeleteClinicImagePayload>\n  /**\n   * [會員]刪除諮詢\n   * 錯誤碼 4031: 非諮詢者本人進行刪除\n   */\n  deleteConsult?: Maybe<DeleteConsultPayload>\n  /** [廠商]刪除診所醫生 */\n  deleteDoctor?: Maybe<DeleteDoctorPayload>\n  /** 刪除熱門關鍵字 */\n  deletePopularKeyword?: Maybe<DeletePopularKeywordPayload>\n  /** [廠商]刪除貼文 */\n  deletePost?: Maybe<DeletePostPayload>\n  /** 刪除中分類 */\n  deleteSecondCategory?: Maybe<DeleteSecondCategoryPayload>\n  /** 刪除大分類 */\n  deleteTopCategory?: Maybe<DeleteTopCategoryPayload>\n  /** [會員]刪除使用者 */\n  deleteUser?: Maybe<DeleteUserPayload>\n  /**\n   * [會員]啟動/關閉諮詢\n   * 錯誤碼 4031: 非諮詢者本人進行刪除\n   */\n  enableConsult?: Maybe<EnableConsultPayload>\n  /** [診所管理員]讀取診所收件夾訊息 */\n  readClinicInbox?: Maybe<ReadClinicInboxPayload>\n  /** [會員/診所管理員]讀取諮詢回覆 */\n  readReply?: Maybe<ReadReplyPayload>\n  /** [會員]移除已蒐集病例 */\n  removeCollectedCase?: Maybe<RemoveCollectedCasePayload>\n  /** [會員]回覆話題 */\n  replyTopic?: Maybe<ReplyTopicPayload>\n  /**\n   * 重新寄發認證信\n   * 錯誤碼： 5001，寄發時發生錯誤\n   */\n  sendEmailVerification?: Maybe<SendEmailVerificationPayload>\n  /**\n   * 寄發密碼重設認證信，若成功會回傳 succeed = true.\n   * 若失敗會回傳 code 5001\n   */\n  sendPasswordResetEmail?: Maybe<SendPasswordResetEmailPayload>\n  /** [廠商]設定熱門關鍵字 */\n  setPopularKeywords?: Maybe<SetPopularKeywordsPayload>\n  /**\n   * 以 Email + Password 來登入使用者\n   *\n   *\n   * **Returns:**\n   * 登入成功之 Token\n   */\n  signInWithEmailAndPassword?: Maybe<SignInWithEmailAndPasswordPayload>\n  /** [廠商]更新診所活動頁 */\n  updateActivity?: Maybe<UpdateActivityPayload>\n  /** [廠商]更新廠商廣告卡 */\n  updateAdCard?: Maybe<UpdateAdCardPayload>\n  /** [廠商]修改 Banner 廣告圖 */\n  updateAdImage?: Maybe<UpdateAdImagePayload>\n  /** [廠商]更新案例 */\n  updateCase?: Maybe<UpdateCasePayload>\n  /** [廠商]修改小分類 */\n  updateCategory?: Maybe<UpdateCategoryPayload>\n  /** [廠商]修改診所基本資訊 */\n  updateClinic?: Maybe<UpdateClinicPayload>\n  /** [診所管理員]更新診所專長分類 */\n  updateClinicCategory?: Maybe<UpdateClinicCategoryPayload>\n  /** [廠商]修改診所聯絡人資訊 */\n  updateClinicContact?: Maybe<UpdateClinicContactPayload>\n  /** [廠商]修改診所圖片 */\n  updateClinicImage?: Maybe<UpdateClinicImagePayload>\n  /** [廠商]修改診所聯絡人資訊 */\n  updateClinicOwner?: Maybe<UpdateClinicOwnerPayload>\n  /** [廠商]修改診所付費資訊。 */\n  updateClinicPayment?: Maybe<UpdateClinicPaymentPayload>\n  /** [廠商]更新診所醫生 */\n  updateDoctor?: Maybe<UpdateDoctorPayload>\n  /** [廠商]修改貼文內容 */\n  updatePost?: Maybe<UpdatePostPayload>\n  /** [廠商]修改中分類 */\n  updateSecondCategory?: Maybe<UpdateSecondCategoryPayload>\n  /** [廠商]修改大分類 */\n  updateTopCategory?: Maybe<UpdateTopCategoryPayload>\n  /** [會員]更新使用者資料 */\n  updateUser?: Maybe<UpdateUserPayload>\n}\n\nexport type MutationAddActivityArgs = {\n  input?: InputMaybe<AddActivityInput>\n}\n\nexport type MutationAddAdCardArgs = {\n  input?: InputMaybe<AddAdCardInput>\n}\n\nexport type MutationAddAdImageArgs = {\n  input?: InputMaybe<AddAdImageInput>\n}\n\nexport type MutationAddAnswerArgs = {\n  input?: InputMaybe<AddAnswerInput>\n}\n\nexport type MutationAddCaseArgs = {\n  input?: InputMaybe<AddCaseInput>\n}\n\nexport type MutationAddCategoryArgs = {\n  input?: InputMaybe<AddCategoryInput>\n}\n\nexport type MutationAddClientTokenArgs = {\n  input?: InputMaybe<AddClientTokenInput>\n}\n\nexport type MutationAddClinicArgs = {\n  input?: InputMaybe<AddClinicInput>\n}\n\nexport type MutationAddClinicImageArgs = {\n  input?: InputMaybe<AddClinicImageInput>\n}\n\nexport type MutationAddConsultArgs = {\n  input?: InputMaybe<AddConsultInput>\n}\n\nexport type MutationAddConsultTopicArgs = {\n  input?: InputMaybe<AddConsultTopicInput>\n}\n\nexport type MutationAddDoctorArgs = {\n  input?: InputMaybe<AddDoctorInput>\n}\n\nexport type MutationAddPopularKeywordArgs = {\n  input?: InputMaybe<AddPopularKeywordInput>\n}\n\nexport type MutationAddPostArgs = {\n  input?: InputMaybe<AddPostInput>\n}\n\nexport type MutationAddQuestionArgs = {\n  input?: InputMaybe<AddQuestionInput>\n}\n\nexport type MutationAddSecondCategoryArgs = {\n  input?: InputMaybe<AddSecondCategoryInput>\n}\n\nexport type MutationAddTopCategoryArgs = {\n  input?: InputMaybe<AddTopCategoryInput>\n}\n\nexport type MutationAddUserArgs = {\n  input?: InputMaybe<AddUserInput>\n}\n\nexport type MutationCollectCaseArgs = {\n  input?: InputMaybe<CollectCaseInput>\n}\n\nexport type MutationConsultClinicArgs = {\n  input?: InputMaybe<ConsultClinicInput>\n}\n\nexport type MutationCreateUserWithEmailAndPasswordArgs = {\n  input?: InputMaybe<CreateUserWithEmailAndPasswordInput>\n}\n\nexport type MutationDeleteActivityArgs = {\n  input?: InputMaybe<DeleteActivityInput>\n}\n\nexport type MutationDeleteAdCardArgs = {\n  input?: InputMaybe<DeleteAdCardInput>\n}\n\nexport type MutationDeleteAdImageArgs = {\n  input?: InputMaybe<DeleteAdImageInput>\n}\n\nexport type MutationDeleteCaseArgs = {\n  input?: InputMaybe<DeleteCaseInput>\n}\n\nexport type MutationDeleteCategoryArgs = {\n  input?: InputMaybe<DeleteCategoryInput>\n}\n\nexport type MutationDeleteClientTokenArgs = {\n  input?: InputMaybe<DeleteClientTokenInput>\n}\n\nexport type MutationDeleteClinicArgs = {\n  input?: InputMaybe<DeleteClinicInput>\n}\n\nexport type MutationDeleteClinicImageArgs = {\n  input?: InputMaybe<DeleteClinicImageInput>\n}\n\nexport type MutationDeleteConsultArgs = {\n  input?: InputMaybe<DeleteConsultInput>\n}\n\nexport type MutationDeleteDoctorArgs = {\n  input?: InputMaybe<DeleteDoctorInput>\n}\n\nexport type MutationDeletePopularKeywordArgs = {\n  input?: InputMaybe<DeletePopularKeywordInput>\n}\n\nexport type MutationDeletePostArgs = {\n  input?: InputMaybe<DeletePostInput>\n}\n\nexport type MutationDeleteSecondCategoryArgs = {\n  input?: InputMaybe<DeleteSecondCategoryInput>\n}\n\nexport type MutationDeleteTopCategoryArgs = {\n  input?: InputMaybe<DeleteTopCategoryInput>\n}\n\nexport type MutationDeleteUserArgs = {\n  input?: InputMaybe<DeleteUserInput>\n}\n\nexport type MutationEnableConsultArgs = {\n  input?: InputMaybe<EnableConsultInput>\n}\n\nexport type MutationReadClinicInboxArgs = {\n  input: ReadClinicInboxInput\n}\n\nexport type MutationReadReplyArgs = {\n  input?: InputMaybe<ReadReplyInput>\n}\n\nexport type MutationRemoveCollectedCaseArgs = {\n  input?: InputMaybe<RemoveCollectedCaseInput>\n}\n\nexport type MutationReplyTopicArgs = {\n  input?: InputMaybe<ReplyTopicInput>\n}\n\nexport type MutationSendEmailVerificationArgs = {\n  input?: InputMaybe<SendEmailVerificationInput>\n}\n\nexport type MutationSendPasswordResetEmailArgs = {\n  input?: InputMaybe<SendPasswordResetEmailInput>\n}\n\nexport type MutationSetPopularKeywordsArgs = {\n  input?: InputMaybe<SetPopularKeywordsInput>\n}\n\nexport type MutationSignInWithEmailAndPasswordArgs = {\n  input?: InputMaybe<SignInWithEmailAndPasswordInput>\n}\n\nexport type MutationUpdateActivityArgs = {\n  input?: InputMaybe<UpdateActivityInput>\n}\n\nexport type MutationUpdateAdCardArgs = {\n  input?: InputMaybe<UpdateAdCardInput>\n}\n\nexport type MutationUpdateAdImageArgs = {\n  input?: InputMaybe<UpdateAdImageInput>\n}\n\nexport type MutationUpdateCaseArgs = {\n  input?: InputMaybe<UpdateCaseInput>\n}\n\nexport type MutationUpdateCategoryArgs = {\n  input?: InputMaybe<UpdateCategoryInput>\n}\n\nexport type MutationUpdateClinicArgs = {\n  input?: InputMaybe<UpdateClinicInput>\n}\n\nexport type MutationUpdateClinicCategoryArgs = {\n  input?: InputMaybe<UpdateClinicCategoryInput>\n}\n\nexport type MutationUpdateClinicContactArgs = {\n  input?: InputMaybe<UpdateClinicContactInput>\n}\n\nexport type MutationUpdateClinicImageArgs = {\n  input?: InputMaybe<UpdateClinicImageInput>\n}\n\nexport type MutationUpdateClinicOwnerArgs = {\n  input?: InputMaybe<UpdateClinicOwnerInput>\n}\n\nexport type MutationUpdateClinicPaymentArgs = {\n  input?: InputMaybe<UpdateClinicPaymentInput>\n}\n\nexport type MutationUpdateDoctorArgs = {\n  input?: InputMaybe<UpdateDoctorInput>\n}\n\nexport type MutationUpdatePostArgs = {\n  input?: InputMaybe<UpdatePostInput>\n}\n\nexport type MutationUpdateSecondCategoryArgs = {\n  input?: InputMaybe<UpdateSecondCategoryInput>\n}\n\nexport type MutationUpdateTopCategoryArgs = {\n  input?: InputMaybe<UpdateTopCategoryInput>\n}\n\nexport type MutationUpdateUserArgs = {\n  input?: InputMaybe<UpdateUserInput>\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename: \"PageInfo\"\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars[\"String\"]>\n  /** Indicates whether more edges exist following the set defined by the clients arguments. */\n  hasNextPage: Scalars[\"Boolean\"]\n  /** Indicates whether more edges exist prior the set defined by the clients arguments. */\n  hasPreviousPage: Scalars[\"Boolean\"]\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars[\"String\"]>\n}\n\n/** 熱門搜尋 */\nexport type PopularKeywords = {\n  __typename: \"PopularKeywords\"\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 關鍵字 */\n  keywords?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n}\n\n/** 貼文 */\nexport type Post = {\n  __typename: \"Post\"\n  /** 內容 */\n  content?: Maybe<Scalars[\"String\"]>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 取得發表時間 */\n  postAt: Scalars[\"Long\"]\n  /** 標題 */\n  subject?: Maybe<Scalars[\"String\"]>\n}\n\n/** 貼文 */\nexport type PostFilterInput = {\n  and?: InputMaybe<Array<PostFilterInput>>\n  /** 內容 */\n  content?: InputMaybe<StringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<PostFilterInput>>\n  /** 標題 */\n  subject?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 貼文 */\nexport type PostSortInput = {\n  /** 內容 */\n  content?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 標題 */\n  subject?: InputMaybe<SortEnumType>\n}\n\n/** A connection to a list of items. */\nexport type PostsConnection = {\n  __typename: \"PostsConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<PostsEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<Post>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type PostsEdge = {\n  __typename: \"PostsEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<Post>\n}\n\nexport type Query = {\n  __typename: \"Query\"\n  /** 查詢診所活動 */\n  activities?: Maybe<ActivitiesConnection>\n  /** 取得診所活動內容 */\n  activity?: Maybe<ClinicActivity>\n  /** 依廣告卡識別碼取得廣告卡 */\n  adCard?: Maybe<AdCard>\n  /** 查詢廠商廣告卡 */\n  adCards?: Maybe<AdCardsConnection>\n  /** 取得所有廣告圖 */\n  adImages?: Maybe<AdImagesConnection>\n  /** 取得所有診所 */\n  allClinics?: Maybe<Array<Maybe<Clinic>>>\n  /** 取得指定問卷回答 */\n  answersByQuestionId?: Maybe<AnswersByQuestionIdConnection>\n  /** 依識別碼取得病例 */\n  case?: Maybe<ClinicCase>\n  /** 取得診所內所有案例 */\n  caseByClinicId?: Maybe<Array<Maybe<ClinicCase>>>\n  /** 取得所有病例 */\n  cases?: Maybe<CasesConnection>\n  /** 取得小分類 */\n  categories?: Maybe<Array<Maybe<Category>>>\n  /** 依識別碼取得診所 */\n  clinic?: Maybe<Clinic>\n  /** 取得指定診所圖片 */\n  clinicImages?: Maybe<Array<Maybe<ClinicImage>>>\n  /** 取得診所信箱 */\n  clinicInbox?: Maybe<ClinicInboxConnection>\n  /** 取得診所列表 */\n  clinics?: Maybe<ClinicsConnection>\n  /** 取得指定的諮詢 */\n  consult?: Maybe<Consult>\n  /** 取得所有諮詢 */\n  consults?: Maybe<Array<Maybe<Consult>>>\n  /** 依使用者識別碼取得該使用者的所有諮詢 */\n  consultsByUserId?: Maybe<Array<Maybe<Consult>>>\n  /**\n   * 登入 firebase 後，以 firebase uid 取得該使用者在此系統中的個人資料所產生的 token,\n   * 再以此 token 呼叫 signWithCustomToken(token)產生新 idToken 進行登入。\n   */\n  customToken?: Maybe<CustomTokenPayload>\n  /** 依識別碼取得醫生 */\n  doctor?: Maybe<ClinicDoctor>\n  /** 取得診所內所有醫生 */\n  doctorByClinicId?: Maybe<Array<Maybe<ClinicDoctor>>>\n  /** 取得所有醫生 */\n  doctors?: Maybe<DoctorsConnection>\n  /** 註冊前判斷 email 是否已註冊 */\n  emailExists?: Maybe<EmailExistsPayload>\n  /** 取得最新一筆發文 */\n  latestPost?: Maybe<Post>\n  /** 取得會員個人資訊 */\n  me?: Maybe<User>\n  /** 取得診所管理員的診所 */\n  myClinic?: Maybe<Clinic>\n  /** 取得熱門搜尋 */\n  popularKeywords?: Maybe<PopularKeywords>\n  /** 取得所有發文 */\n  posts?: Maybe<PostsConnection>\n  /** 取得指定問卷 */\n  question?: Maybe<Question>\n  /** 取得問卷列表 */\n  questions?: Maybe<QuestionsConnection>\n  /** 更新 customToken */\n  refreshToken?: Maybe<CustomTokenPayload>\n  /** 取得分類樹 */\n  topCategories?: Maybe<Array<Maybe<TopCategory>>>\n  /** 依 Topic 識別碼取得 Topic */\n  topic?: Maybe<ClinicConsultTopic>\n  /** 取得診所相關諮詢 */\n  topicsByClinicId?: Maybe<TopicsByClinicIdConnection>\n  /** 依識別碼取得取用者 */\n  user?: Maybe<User>\n  /** 取得使用者收件夾 */\n  userInbox?: Maybe<Array<Maybe<UserInbox>>>\n  /** 取得所有使用者 */\n  users?: Maybe<UsersConnection>\n}\n\nexport type QueryActivitiesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<ClinicActivitySortInput>>\n  where?: InputMaybe<ClinicActivityFilterInput>\n}\n\nexport type QueryActivityArgs = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryAdCardArgs = {\n  adCardId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryAdCardsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<AdCardSortInput>>\n  where?: InputMaybe<AdCardFilterInput>\n}\n\nexport type QueryAdImagesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<AdImageSortInput>>\n  where?: InputMaybe<AdImageFilterInput>\n}\n\nexport type QueryAllClinicsArgs = {\n  order?: InputMaybe<Array<ClinicSortInput>>\n}\n\nexport type QueryAnswersByQuestionIdArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<AnswerSortInput>>\n  questionId?: InputMaybe<Scalars[\"String\"]>\n  where?: InputMaybe<AnswerFilterInput>\n}\n\nexport type QueryCaseArgs = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryCaseByClinicIdArgs = {\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryCasesArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<ClinicCaseSortInput>>\n  where?: InputMaybe<ClinicCaseFilterInput>\n}\n\nexport type QueryClinicArgs = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryClinicImagesArgs = {\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryClinicInboxArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<ClinicInboxSortInput>>\n  where?: InputMaybe<ClinicInboxFilterInput>\n}\n\nexport type QueryClinicsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<ClinicSortInput>>\n  where?: InputMaybe<ClinicFilterInput>\n}\n\nexport type QueryConsultArgs = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryConsultsByUserIdArgs = {\n  userId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryDoctorArgs = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryDoctorByClinicIdArgs = {\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryDoctorsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<ClinicDoctorSortInput>>\n  where?: InputMaybe<ClinicDoctorFilterInput>\n}\n\nexport type QueryEmailExistsArgs = {\n  email?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryPostsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<PostSortInput>>\n  where?: InputMaybe<PostFilterInput>\n}\n\nexport type QueryQuestionArgs = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryQuestionsArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<QuestionSortInput>>\n  where?: InputMaybe<QuestionFilterInput>\n}\n\nexport type QueryTopicArgs = {\n  topicId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryTopicsByClinicIdArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<ClinicConsultTopicSortInput>>\n  where?: InputMaybe<ClinicConsultTopicFilterInput>\n}\n\nexport type QueryUserArgs = {\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type QueryUserInboxArgs = {\n  consultId?: InputMaybe<Scalars[\"String\"]>\n  order?: InputMaybe<Array<UserInboxSortInput>>\n}\n\nexport type QueryUsersArgs = {\n  after?: InputMaybe<Scalars[\"String\"]>\n  before?: InputMaybe<Scalars[\"String\"]>\n  first?: InputMaybe<Scalars[\"Int\"]>\n  last?: InputMaybe<Scalars[\"Int\"]>\n  order?: InputMaybe<Array<UserSortInput>>\n  where?: InputMaybe<UserFilterInput>\n}\n\n/** 問卷 */\nexport type Question = {\n  __typename: \"Question\"\n  /** 取得問卷回覆 */\n  answers?: Maybe<Array<Maybe<Answer>>>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 問卷題目 */\n  items?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n}\n\n/** 問卷 */\nexport type QuestionFilterInput = {\n  and?: InputMaybe<Array<QuestionFilterInput>>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 問卷題目 */\n  items?: InputMaybe<ListStringOperationFilterInput>\n  or?: InputMaybe<Array<QuestionFilterInput>>\n}\n\n/** 問卷 */\nexport type QuestionSortInput = {\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n}\n\n/** A connection to a list of items. */\nexport type QuestionsConnection = {\n  __typename: \"QuestionsConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<QuestionsEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<Question>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type QuestionsEdge = {\n  __typename: \"QuestionsEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<Question>\n}\n\nexport type ReadClinicInboxInput = {\n  /** 訊息識別碼 */\n  clinicInboxId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type ReadClinicInboxPayload = {\n  __typename: \"ReadClinicInboxPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 讀取諮詢回覆訊息所需資訊 */\nexport type ReadReplyInput = {\n  /** 診所諮詢討論串識別碼 */\n  topicId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 讀取諮詢回覆訊息 */\nexport type ReadReplyPayload = {\n  __typename: \"ReadReplyPayload\"\n  add?: Maybe<ReadReplyPayload>\n  /** 己讀取訊息識別碼 */\n  replyId?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n}\n\n/** 讀取諮詢回覆訊息 */\nexport type ReadReplyPayloadAddArgs = {\n  replyId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 移除病例輸入資料 */\nexport type RemoveCollectedCaseInput = {\n  /** 蒐集案例識別碼 */\n  caseId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 移除病例輸出資料 */\nexport type RemoveCollectedCasePayload = {\n  __typename: \"RemoveCollectedCasePayload\"\n  /** 案例被收藏的次數 */\n  collectedCount: Scalars[\"Long\"]\n  /** 使用者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\nexport type ReplyTopicInput = {\n  /** 回覆內容 */\n  content?: InputMaybe<Scalars[\"String\"]>\n  /** 內容類型，image/text */\n  contentType?: InputMaybe<Scalars[\"String\"]>\n  /** 回覆診所諮詢 Topic 識別碼 */\n  topicId?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type ReplyTopicPayload = {\n  __typename: \"ReplyTopicPayload\"\n  /** 諮詢試別碼 */\n  consultId?: Maybe<Scalars[\"String\"]>\n  /** 回覆識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 主題識別碼 */\n  topicId?: Maybe<Scalars[\"String\"]>\n}\n\n/** 小分類 */\nexport type SecondCategory = {\n  __typename: \"SecondCategory\"\n  /** 取得第三層 */\n  categories?: Maybe<Array<Maybe<Category>>>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 中分類名稱 */\n  name?: Maybe<Scalars[\"String\"]>\n  /** 所屬大分類識別碼 */\n  topCategoryId?: Maybe<Scalars[\"String\"]>\n}\n\nexport type SendEmailVerificationInput = {\n  email?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type SendEmailVerificationPayload = {\n  __typename: \"SendEmailVerificationPayload\"\n  succeed: Scalars[\"Boolean\"]\n}\n\n/** 寄發重置密碼認證信 */\nexport type SendPasswordResetEmailInput = {\n  email?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 寄發重置密碼認證信結果 */\nexport type SendPasswordResetEmailPayload = {\n  __typename: \"SendPasswordResetEmailPayload\"\n  succeed: Scalars[\"Boolean\"]\n}\n\n/** 設定熱門搜尋資料 */\nexport type SetPopularKeywordsInput = {\n  /** 關鍵字 */\n  keywords?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n}\n\n/** 設定熱門結果 */\nexport type SetPopularKeywordsPayload = {\n  __typename: \"SetPopularKeywordsPayload\"\n  keywords?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n}\n\nexport type SignInWithEmailAndPasswordInput = {\n  email?: InputMaybe<Scalars[\"String\"]>\n  password?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 登入憑證結果 */\nexport type SignInWithEmailAndPasswordPayload = {\n  __typename: \"SignInWithEmailAndPasswordPayload\"\n  /** 會員系統憑證 */\n  customToken?: Maybe<Scalars[\"String\"]>\n  /** Firebase Auth 憑證 */\n  firebaseToken?: Maybe<Scalars[\"String\"]>\n}\n\nexport enum SortEnumType {\n  Asc = \"ASC\",\n  Desc = \"DESC\",\n}\n\nexport type StringOperationFilterInput = {\n  and?: InputMaybe<Array<StringOperationFilterInput>>\n  contains?: InputMaybe<Scalars[\"String\"]>\n  endsWith?: InputMaybe<Scalars[\"String\"]>\n  eq?: InputMaybe<Scalars[\"String\"]>\n  in?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  ncontains?: InputMaybe<Scalars[\"String\"]>\n  nendsWith?: InputMaybe<Scalars[\"String\"]>\n  neq?: InputMaybe<Scalars[\"String\"]>\n  nin?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  nstartsWith?: InputMaybe<Scalars[\"String\"]>\n  or?: InputMaybe<Array<StringOperationFilterInput>>\n  startsWith?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 小分類 */\nexport type TopCategory = {\n  __typename: \"TopCategory\"\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 大分類名稱 */\n  name?: Maybe<Scalars[\"String\"]>\n  /** 取得第二層 */\n  secondCategories?: Maybe<Array<Maybe<SecondCategory>>>\n}\n\n/** A connection to a list of items. */\nexport type TopicsByClinicIdConnection = {\n  __typename: \"TopicsByClinicIdConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<TopicsByClinicIdEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<ClinicConsultTopic>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type TopicsByClinicIdEdge = {\n  __typename: \"TopicsByClinicIdEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<ClinicConsultTopic>\n}\n\n/** 更新診所活動頁 */\nexport type UpdateActivityInput = {\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 活動內容 */\n  content?: InputMaybe<Scalars[\"String\"]>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 活動圖片 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 活動主題 */\n  subject?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateActivityPayload = {\n  __typename: \"UpdateActivityPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 更新廠商廣告卡參數 */\nexport type UpdateAdCardInput = {\n  /** 廣告內容 */\n  content?: InputMaybe<Scalars[\"String\"]>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告標題 */\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateAdCardPayload = {\n  __typename: \"UpdateAdCardPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 更新廣告圖片參數 */\nexport type UpdateAdImageInput = {\n  /** 所屬診所 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: InputMaybe<Scalars[\"String\"]>\n  /** 排序 */\n  sort: Scalars[\"Int\"]\n  /** 狀態： true 開啟，false 關閉 */\n  status: Scalars[\"Boolean\"]\n  /** 點擊後轉址目標識別碼 */\n  targetId?: InputMaybe<Scalars[\"String\"]>\n  /** 標題 */\n  title?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告圖片用途，如：首頁輪播/診所輪播/症例輪播 */\n  usageType?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateAdImagePayload = {\n  __typename: \"UpdateAdImagePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type UpdateCaseInput = {\n  /** 案例分類 */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 案例描述 */\n  description?: InputMaybe<Scalars[\"String\"]>\n  /** 是否被設為熱門案例 */\n  hot: Scalars[\"Boolean\"]\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 案例照 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 案例照關鍵字 */\n  imageText?: InputMaybe<Scalars[\"String\"]>\n  /** 病例標題 */\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateCasePayload = {\n  __typename: \"UpdateCasePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 修改小分類 */\nexport type UpdateCategoryInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 小分類名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 所屬大分類 */\n  parent?: InputMaybe<Scalars[\"String\"]>\n  /** 所屬大分類 */\n  topParent?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 修改小分類結果 */\nexport type UpdateCategoryPayload = {\n  __typename: \"UpdateCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 專長資訊 */\nexport type UpdateClinicCategoryInput = {\n  /** 專長分類陣列 */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n}\n\nexport type UpdateClinicCategoryPayload = {\n  __typename: \"UpdateClinicCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type UpdateClinicContactInput = {\n  /** 聯絡人信箱 */\n  contactEmail?: InputMaybe<Scalars[\"String\"]>\n  /** 聯絡人姓名 */\n  contactName?: InputMaybe<Scalars[\"String\"]>\n  /** 聯絡人電話 */\n  contactPhone?: InputMaybe<Scalars[\"String\"]>\n  /** 診所識別碼 */\n  id?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateClinicContactPayload = {\n  __typename: \"UpdateClinicContactPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 更新廣告圖片參數 */\nexport type UpdateClinicImageInput = {\n  /** 所屬診所識別碼 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 廣告圖片網址 */\n  image?: InputMaybe<Scalars[\"String\"]>\n  /** 點擊後轉址類型，如：Clinic/Case/Doctor */\n  redirectType?: InputMaybe<Scalars[\"String\"]>\n  /** 排序 */\n  sort: Scalars[\"Int\"]\n  /** 狀態。true 開啟 false 關閉 */\n  status: Scalars[\"Boolean\"]\n  /** 點擊後轉址目標識別碼 */\n  targetId?: InputMaybe<Scalars[\"String\"]>\n  /** 標題 */\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateClinicImagePayload = {\n  __typename: \"UpdateClinicImagePayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type UpdateClinicInput = {\n  /** 診所地址 */\n  address?: InputMaybe<Scalars[\"String\"]>\n  /** 診所小分類 */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 診所縣市 */\n  county?: InputMaybe<Scalars[\"String\"]>\n  /** 診所描述 */\n  description?: InputMaybe<Scalars[\"String\"]>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 診所名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 診所電話 */\n  phone?: InputMaybe<Scalars[\"String\"]>\n  /** 診所鄉鎮市區 */\n  town?: InputMaybe<Scalars[\"String\"]>\n  /** 診所網站網址 */\n  web?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateClinicOwnerInput = {\n  /** 診所識別碼 */\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 管理員信箱 */\n  ownerEmail?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n}\n\nexport type UpdateClinicOwnerPayload = {\n  __typename: \"UpdateClinicOwnerPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type UpdateClinicPayload = {\n  __typename: \"UpdateClinicPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type UpdateClinicPaymentInput = {\n  /** 診所識別碼 */\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 最後付費時間。若不傳此值則使用系統時間。 */\n  latestPayAt?: InputMaybe<Scalars[\"Long\"]>\n  /** 是否已付費 */\n  paid?: InputMaybe<Scalars[\"Boolean\"]>\n  /** 付費組數 */\n  paySets: Scalars[\"Int\"]\n}\n\nexport type UpdateClinicPaymentPayload = {\n  __typename: \"UpdateClinicPaymentPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type UpdateDoctorInput = {\n  /** 診所識別碼 */\n  clinicId?: InputMaybe<Scalars[\"String\"]>\n  /** 醫師專長，自填 */\n  expertise?: InputMaybe<Scalars[\"String\"]>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 醫師姓名 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 照片 */\n  photo?: InputMaybe<Scalars[\"String\"]>\n  /** 學經歷 */\n  resumes?: InputMaybe<Scalars[\"String\"]>\n  /** 頭銜 */\n  title?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateDoctorPayload = {\n  __typename: \"UpdateDoctorPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 修改貼文 */\nexport type UpdatePostInput = {\n  /** 發文內容 */\n  content?: InputMaybe<Scalars[\"String\"]>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 標題 */\n  subject?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 修改貼文回覆 */\nexport type UpdatePostPayload = {\n  __typename: \"UpdatePostPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 修改中分類 */\nexport type UpdateSecondCategoryInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 中分類名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 所屬大分類識別碼 */\n  topCategoryId?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 修改中分類結果 */\nexport type UpdateSecondCategoryPayload = {\n  __typename: \"UpdateSecondCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 修改大分類 */\nexport type UpdateTopCategoryInput = {\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 大分類名稱 */\n  name?: InputMaybe<Scalars[\"String\"]>\n}\n\n/** 修改大分類結果 */\nexport type UpdateTopCategoryPayload = {\n  __typename: \"UpdateTopCategoryPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\nexport type UpdateUserInput = {\n  /** 關注分類 */\n  categories?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 使用者所使用的裝識識別碼，用於接收 firebase 訊息用 */\n  clientToken?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** /// 蒐集的病症案例編號，對應 ClinicCase.id */\n  collectedCases?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  /** 使手者電子郵件信箱，必填 */\n  email?: InputMaybe<Scalars[\"String\"]>\n  /** 儲存搜尋條件 */\n  filters?: InputMaybe<Array<InputMaybe<Scalars[\"String\"]>>>\n  id?: InputMaybe<Scalars[\"String\"]>\n  /** 使用者姓名 */\n  name?: InputMaybe<Scalars[\"String\"]>\n  /** 使用者電話 */\n  phone?: InputMaybe<Scalars[\"String\"]>\n}\n\nexport type UpdateUserPayload = {\n  __typename: \"UpdateUserPayload\"\n  id?: Maybe<Scalars[\"String\"]>\n}\n\n/** 使用者資料 */\nexport type User = {\n  __typename: \"User\"\n  /** 取得使用者有興趣的小分類 */\n  categories?: Maybe<Array<Maybe<Category>>>\n  /** 使用者使用的裝置識別碼，接收 firebase message 用 */\n  clientTokens?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n  /** 取得使用者諮詢 */\n  consults?: Maybe<Array<Maybe<ConsultExt>>>\n  /** 使用者電子郵件信箱 */\n  email?: Maybe<Scalars[\"String\"]>\n  /** 儲存搜尋條件 */\n  filters?: Maybe<Array<Maybe<Scalars[\"String\"]>>>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 使用者名稱 */\n  name?: Maybe<Scalars[\"String\"]>\n  /** 使用者電話 */\n  phone?: Maybe<Scalars[\"String\"]>\n  /** GCP Firebase 中的識別碼 */\n  uid?: Maybe<Scalars[\"String\"]>\n  /** 取得使用者蒐取病例 */\n  userCollectedCases?: Maybe<Array<Maybe<ClinicCase>>>\n}\n\n/** 使用者資料 */\nexport type UserFilterInput = {\n  and?: InputMaybe<Array<UserFilterInput>>\n  /** 關注分類 */\n  categories?: InputMaybe<ListStringOperationFilterInput>\n  /** 使用者使用的裝置識別碼，接收 firebase message 用 */\n  clientTokens?: InputMaybe<ListStringOperationFilterInput>\n  /** 蒐集的病症案例編號，對應 ClinicCase.id */\n  collectedCases?: InputMaybe<ListStringOperationFilterInput>\n  /** 使用者電子郵件信箱 */\n  email?: InputMaybe<StringOperationFilterInput>\n  /** 儲存搜尋條件 */\n  filters?: InputMaybe<ListStringOperationFilterInput>\n  /** 物件識別碼 */\n  id?: InputMaybe<StringOperationFilterInput>\n  /** 使用者名稱 */\n  name?: InputMaybe<StringOperationFilterInput>\n  or?: InputMaybe<Array<UserFilterInput>>\n  /** 使用者電話 */\n  phone?: InputMaybe<StringOperationFilterInput>\n  /** GCP Firebase 中的識別碼 */\n  uid?: InputMaybe<StringOperationFilterInput>\n}\n\n/** 診所信箱 */\nexport type UserInbox = {\n  __typename: \"UserInbox\"\n  /** 取診所資訊 */\n  clinic?: Maybe<Clinic>\n  /** 取得討論串資訊 */\n  consult?: Maybe<Consult>\n  /** 所屬諮詢 */\n  consultId?: Maybe<Scalars[\"String\"]>\n  /** 物件識別碼 */\n  id?: Maybe<Scalars[\"String\"]>\n  /** 會員最後發信時間 */\n  lastReplyAt: Scalars[\"Long\"]\n  /** 是否已被諮詢者讀取 */\n  read: Scalars[\"Boolean\"]\n  /** 讀取時間 */\n  readAt: Scalars[\"Long\"]\n  /** 取得信箱中的回覆內容 */\n  replies?: Maybe<Array<Maybe<ConsultTopicReply>>>\n  /** 最後回覆是否為診所，true 為診所回 */\n  replyByClinic: Scalars[\"Boolean\"]\n  topic?: Maybe<ClinicConsultTopic>\n  /** 診所諮詢討論串識別碼 */\n  topicId?: Maybe<Scalars[\"String\"]>\n  /** 諮詢者識別碼 */\n  userId?: Maybe<Scalars[\"String\"]>\n}\n\n/** 診所信箱 */\nexport type UserInboxSortInput = {\n  /** 診所識別碼 */\n  clinicId?: InputMaybe<SortEnumType>\n  /** 所屬諮詢 */\n  consultId?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 會員最後發信時間 */\n  lastReplyAt?: InputMaybe<SortEnumType>\n  parentField?: InputMaybe<SortEnumType>\n  parentId?: InputMaybe<SortEnumType>\n  /** 是否已被諮詢者讀取 */\n  read?: InputMaybe<SortEnumType>\n  /** 讀取時間 */\n  readAt?: InputMaybe<SortEnumType>\n  /** 最後回覆是否為診所，true 為診所回 */\n  replyByClinic?: InputMaybe<SortEnumType>\n  /** 診所諮詢討論串識別碼 */\n  topicId?: InputMaybe<SortEnumType>\n  /** 諮詢者識別碼 */\n  userId?: InputMaybe<SortEnumType>\n}\n\n/** 使用者資料 */\nexport type UserSortInput = {\n  /** 使用者電子郵件信箱 */\n  email?: InputMaybe<SortEnumType>\n  /** 物件識別碼 */\n  id?: InputMaybe<SortEnumType>\n  /** 使用者名稱 */\n  name?: InputMaybe<SortEnumType>\n  /** 使用者電話 */\n  phone?: InputMaybe<SortEnumType>\n  /** GCP Firebase 中的識別碼 */\n  uid?: InputMaybe<SortEnumType>\n}\n\n/** A connection to a list of items. */\nexport type UsersConnection = {\n  __typename: \"UsersConnection\"\n  /** A list of edges. */\n  edges?: Maybe<Array<UsersEdge>>\n  /** A flattened list of the nodes. */\n  nodes?: Maybe<Array<Maybe<User>>>\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo\n  totalCount: Scalars[\"Int\"]\n}\n\n/** An edge in a connection. */\nexport type UsersEdge = {\n  __typename: \"UsersEdge\"\n  /** A cursor for use in pagination. */\n  cursor: Scalars[\"String\"]\n  /** The item at the end of the edge. */\n  node?: Maybe<User>\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["variant","className","selected","children","eventKey","onClick","props","cx","styled","style","e","isMounted","unmountDelay","useState","isTransitioning","setIsTransitioning","useEffect","timeoutId","setTimeout","clearTimeout","open","size","onClose","useMountTransition","portalRootRef","useRef","document","getElementById","drawerRoot","createElement","setAttribute","createPortalRoot","bodyEl","querySelector","current","appendChild","overflow","createPortal","height","images","go","useGo","length","background","autoplay","autoplayInterval","wrapAround","withoutControls","cellSpacing","dragThreshold","map","item","clinicId","redirectType","toClinicInner","id","tab","targetId","toClinicCase","caseId","toClinicActivity","activityId","src","image","width","React","ref","empty","setEmpty","Icon","name","Form","placeholder","backgroundColor","onChange","target","value","onInputClick","defaultOptions","GetAdImagesDocument","gql","useGetAdImagesQuery","baseOptions","options","Apollo","county","town","caseCount","consultReplyCount","countyEventKey","setCountyEventKey","region","setRegion","isCheckAll","setIsCheckAll","Drawer","districtsData","checked","some","el","filter","districts","findIndex","sum","i","s","district","idx","zip","Button","GetClinicsDocument","GetClinicsSearchDocument","openFilter","setOpenFilter","isSearch","setIsSearch","auth","useAuth","getAdImagesQuery","variables","first","orderId","SortEnumType","where","adImages","data","edges","node","sort","prev","next","getClinicsQuery","useGetClinicsQuery","useGetMemberInboxLazyQuery","loadMemberInboxQuery","getMemberInboxQuery","useGetClinicsSearchLazyQuery","loadGetClinicsQuerySearch","getClinicsQuerySearch","clinics","consults","me","user","error","QueryStatus","loading","SearchBar","toSearchList","clinic","toDoctorInbox","toMemberInbox","consult","userInboxes","read","Banner","index","self","indexOf","Toolbars","UserInboxesFragmentDoc","GetMemberInboxDocument","useGetMemberInboxQuery","ApplyPolicy","nanoid","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}