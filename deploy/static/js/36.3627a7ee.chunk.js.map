{"version":3,"file":"static/js/36.3627a7ee.chunk.js","mappings":"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","sources":["webpack://psbeauty/./src/components/Button/Button.module.scss?197e","components/Button/index.tsx","webpack://psbeauty/./src/components/Layout/Backdrop/Backdrop.module.scss?d14b","components/Layout/Backdrop/index.tsx","webpack://psbeauty/./src/components/Layout/Header/Header.module.scss?8aca","components/Layout/Header/index.tsx","components/Modal/ModalPopup/index.tsx","webpack://psbeauty/./src/components/Modal/ModalDialog/ModalDialog.module.scss?9216","components/Modal/ModalDialog/index.tsx","webpack://psbeauty/./src/components/Modal/ModalHeader/ModalHeader.module.scss?68a2","components/Modal/ModalHeader/index.tsx","webpack://psbeauty/./src/components/Modal/ModalBody/ModalBody.module.scss?5b3c","components/Modal/ModalBody/index.tsx","webpack://psbeauty/./src/components/Modal/ModalFooter/ModalFooter.module.scss?a978","components/Modal/ModalFooter/index.tsx","components/Modal/Modal/index.tsx","components/Modal/withOpen.tsx","components/Modal/index.tsx","webpack://psbeauty/./src/pages/ForgotPassword/ForgotPassword.module.scss?befb","pages/ForgotPassword/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Button_wrapper__GqKsN\",\"primary\":\"Button_primary__9MLUH\",\"secondary\":\"Button_secondary__sUGsj\",\"selected\":\"Button_selected__NZP20\",\"text\":\"Button_text__Rk+Tr\",\"transparent\":\"Button_transparent__puDsp\"};","import React, { PropsWithChildren } from \"react\"\nimport cx from \"classnames\"\nimport styled from \"./Button.module.scss\"\n\nconst VARIANT = {\n  PRIMARY: \"primary\",\n  SECONDARY: \"secondary\",\n  TEXT: \"text\",\n  TRANSPARENT: \"transparent\",\n} as const\n\nexport type ButtonProps = {\n  /**\n   * Specify the type of the\n   */\n  variant?: typeof VARIANT[keyof typeof VARIANT]\n  /**\n   * Specify whether the Button is currently selected\n   */\n  selected?: boolean\n  /**\n   * The button's key for the ButtonGroup.\n   */\n  eventKey?: ReactProps.EventKey\n  /**\n   * The button is a submit/text button\n   */\n  type?: \"submit\" | \"button\"\n  /**\n   * Provide an optional function to be called when the button element is clicked\n   */\n  onClick?: (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    eventKey?: { eventKey?: ReactProps.EventKey },\n  ) => void\n} & ReactProps.Component\n\nconst Button = ({\n  variant = \"primary\",\n  className,\n  selected = false,\n  children = \"Click\",\n  eventKey,\n  onClick,\n  ...props\n}: PropsWithChildren<ButtonProps>) => {\n  return (\n    <button\n      className={cx(styled.wrapper, styled[variant], { [styled.selected]: selected }, className)}\n      style={props.style}\n      onClick={e => {\n        onClick && onClick(e, { eventKey: eventKey })\n      }}\n      {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Backdrop_wrapper__LB3Yk\"};","import styled from \"./Backdrop.module.scss\"\nimport cx from \"classnames\"\n\nexport type BackdropProps = ReactProps.Component\n\nconst Backdrop = ({ style = {}, ...props }: BackdropProps) => {\n  return (\n    <div className={cx(styled.wrapper, props.className)} style={{ ...style }}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Backdrop\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Header_wrapper__e2tXX\",\"large\":\"Header_large__tDbDa\",\"small\":\"Header_small__U9DHq\",\"back\":\"Header_back__Chgho\",\"title\":\"Header_title__87Ruw\",\"has-back\":\"Header_has-back__h6eqr\"};","import styled from \"./Header.module.scss\"\nimport cx from \"classnames\"\nimport Icon from \"components/Icon\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useParams } from \"react-router-dom\"\n\nexport type HeaderProps = {\n  leftArrow?: boolean\n  title?: string\n  redirect?: () => void\n} & ReactProps.Component\n\nconst Header = ({ style = {}, ...props }: HeaderProps) => {\n  const navigate = useNavigate()\n  const { text } = useParams()\n\n  return (\n    <div\n      className={cx(styled.wrapper, props.className, {\n        [styled.large]: props.title || props.children,\n        [styled.small]: !props.title && !props.leftArrow,\n      })}\n      style={{ ...style }}>\n      {props.leftArrow && (\n        <div\n          onClick={() => (props.redirect ? props.redirect() : text ? navigate(-2) : navigate(-1))}>\n          <Icon className={styled[\"back\"]} name=\"LeftArrow\" />\n        </div>\n      )}\n      {props.title ? (\n        <div\n          className={cx(styled.title, {\n            [styled[\"has-back\"]]: props.leftArrow,\n          })}>\n          {props.title}\n        </div>\n      ) : (\n        props.children\n      )}\n    </div>\n  )\n}\n\nexport default Header\n","import Popup from \"reactjs-popup\"\nimport { PopupProps } from \"reactjs-popup/dist/types\"\n\nexport type ModalPopupProps = {\n  /**\n   * Should the modal appear on screen or not\n   */\n  open?: boolean\n  backdrop?: boolean\n} & Partial<Pick<PopupProps, \"open\" | \"closeOnDocumentClick\" | \"onClose\" | \"children\">>\n\nconst ModalPopup = ({ open = false, backdrop = true, ...props }: ModalPopupProps) => {\n  return (\n    <Popup\n      modal\n      nested\n      lockScroll\n      open={open}\n      closeOnDocumentClick={backdrop}\n      closeOnEscape\n      onClose={props.onClose}\n      contentStyle={{\n        background: \"transparent\",\n        border: \"none\",\n        width: \"auto\",\n      }}\n      overlayStyle={{\n        backgroundColor: \"#091e428a\",\n      }}>\n      {props.children}\n    </Popup>\n  )\n}\n\nexport default ModalPopup\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ModalDialog_wrapper__SJQv5\"};","import cx from \"classnames\"\nimport styled from \"./ModalDialog.module.scss\"\n\nexport type ModalDialogProps = ReactProps.Component\n\nconst ModalDialog = (props: ModalDialogProps) => {\n  return (\n    <div className={cx(styled.wrapper, props.className)} style={props.style}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default ModalDialog\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ModalHeader_wrapper__tVVhd\"};","import cx from \"classnames\"\nimport styled from \"./ModalHeader.module.scss\"\n\nexport type ModalHeaderProps = {\n  /**\n   * The Modal header.\n   */\n  title?: string\n} & ReactProps.Component\n\nconst ModalHeader = (props: ModalHeaderProps) => {\n  return (\n    <header className={cx(styled.wrapper, props.className)} style={props.style}>\n      <h1>{props.title}</h1>\n      {props.children}\n    </header>\n  )\n}\n\nexport default ModalHeader\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ModalBody_main__yFQS5\"};","import cx from \"classnames\"\nimport styled from \"./ModalBody.module.scss\"\n\nexport type ModalBodyProps = {\n  /**\n   * The Modal content. (props.children > props.content)\n   */\n  content?: string\n} & ReactProps.Component\n\nconst ModalBody = (props: ModalBodyProps) => {\n  return (\n    <main className={cx(styled.main, props.className)} style={props.style}>\n      {props.children || props.content}\n    </main>\n  )\n}\n\nexport default ModalBody\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ModalFooter_wrapper__eBzg3\",\"disabled\":\"ModalFooter_disabled__U85L9\"};","import cx from \"classnames\"\nimport styled from \"./ModalFooter.module.scss\"\n\nexport type ModalFooterProps = {\n  /**\n   * The text for confirm button.\n   */\n  confirmText?: string\n  /**\n   * The props for confirm button.\n   */\n  confirmButtonProps?: JSX.IntrinsicElements[\"button\"]\n  /**\n   * A callback triggered whenever the modal is confirmed.\n   */\n  onConfirm?: () => void\n  /**\n   * The text for cancel button, if text is null button will be hidden\n   */\n  cancelText?: string | null\n  /**\n   * The props for cancel button.\n   */\n  cancelButtonProps?: JSX.IntrinsicElements[\"button\"]\n  /**\n   * A callback triggered whenever the cancel button clicked.\n   */\n  onCancel?: () => void\n  /**\n   * A callback triggered whenever the modal is closed.\n   */\n  onClose?: () => void\n} & ReactProps.Component\n\nconst ModalFooter = (props: ModalFooterProps) => {\n  const handleConfirm = () => {\n    props.onConfirm && props.onConfirm()\n    props.onClose && props.onClose()\n  }\n\n  const handleCancel = () => {\n    props.onCancel && props.onCancel()\n    props.onClose && props.onClose()\n  }\n\n  return (\n    <footer className={cx(styled.wrapper, props.className)} style={props.style}>\n      {!!props.cancelText && (\n        <div\n          onClick={handleCancel}\n          className={cx({ [styled.disabled]: props.cancelButtonProps?.disabled })}>\n          {props.cancelText}\n        </div>\n      )}\n      {!!props.confirmText && (\n        <div\n          onClick={handleConfirm}\n          className={cx({ [styled.disabled]: props.confirmButtonProps?.disabled })}>\n          {props.confirmText}\n        </div>\n      )}\n    </footer>\n  )\n}\n\nexport default ModalFooter\n","import ModalPopup from \"../ModalPopup\"\nimport ModalDialog from \"../ModalDialog\"\nimport Header from \"../ModalHeader\"\nimport Body from \"../ModalBody\"\nimport Footer from \"../ModalFooter\"\nimport { ModalPopupProps } from \"../ModalPopup\"\nimport { ModalBodyProps } from \"../ModalBody\"\nimport { ModalHeaderProps } from \"../ModalHeader\"\nimport { ModalFooterProps } from \"../ModalFooter\"\nimport { PopupProps } from \"reactjs-popup/dist/types\"\n\nexport type ModalProps = ModalPopupProps &\n  ModalBodyProps &\n  ModalHeaderProps &\n  ModalFooterProps &\n  Partial<Pick<PopupProps, \"open\" | \"closeOnDocumentClick\" | \"onClose\" | \"children\">>\n\nconst Modal = (props: ModalProps) => {\n  return (\n    <ModalPopup open={props.open} closeOnDocumentClick={props.backdrop} onClose={props.onClose}>\n      <ModalDialog>\n        <Header title={props.title} />\n        <Body content={props.content}>{props.children}</Body>\n        <Footer\n          confirmText={props.confirmText}\n          confirmButtonProps={props.confirmButtonProps}\n          cancelText={props.cancelText}\n          cancelButtonProps={props.cancelButtonProps}\n          onConfirm={props.onConfirm}\n          onCancel={props.onCancel}\n          onClose={props.onClose}\n        />\n      </ModalDialog>\n    </ModalPopup>\n  )\n}\n\nexport default Modal\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { ModalProps } from \"./Modal\"\n\nexport const getPopupRoot = () => {\n  let popupRoot = document.getElementById(\"popup-root\")\n  if (!popupRoot) {\n    popupRoot = document.createElement(\"div\")\n    popupRoot.setAttribute(\"id\", \"popup-root\")\n    document.body.appendChild(popupRoot)\n  }\n  return popupRoot\n}\n\nexport function open(Modal: React.FC<ModalProps>, config: ModalProps) {\n  const modalRoot = getPopupRoot()\n  const modalDiv = document.createElement(\"div\")\n  modalRoot.appendChild(modalDiv)\n\n  function bindClose(config: ModalProps) {\n    const { onConfirm, onCancel, onClose, ...theOtherConfig } = config\n    const bind = (fn?: () => void) =>\n      fn\n        ? () => {\n            typeof fn === \"function\" && fn()\n            close()\n          }\n        : close\n\n    return {\n      ...theOtherConfig,\n      onConfirm: bind(onConfirm),\n      onCancel: bind(onCancel),\n      onClose: bind(onClose),\n    }\n  }\n\n  function render(config: ModalProps) {\n    ReactDOM.render(<Modal {...bindClose(config)} />, modalDiv)\n  }\n\n  function update(newConfig: ModalProps) {\n    render({\n      ...config,\n      ...newConfig,\n      open: true,\n    })\n  }\n\n  function close() {\n    render({\n      ...config,\n      open: false,\n    })\n  }\n\n  render({\n    ...config,\n    open: true,\n  })\n\n  return {\n    destroy: close,\n    update,\n  }\n}\n\nexport function withAlert(config: ModalProps) {\n  return {\n    ...config,\n    cancelText: null,\n  }\n}\n\nexport function withConfirm(config: ModalProps) {\n  return {\n    ...config,\n    cancelText: config.cancelText,\n  }\n}\n","import ModalBase, { ModalProps } from \"./Modal\"\nimport CustomModal from \"./CustomModal\"\nimport ModalDialog from \"./ModalDialog\"\nimport ModalHeader from \"./ModalHeader\"\nimport ModalBody from \"./ModalBody\"\nimport ModalFooter from \"./ModalFooter\"\nimport { open, withAlert, withConfirm } from \"./withOpen\"\n\nexport type { ModalProps } from \"./Modal\"\nexport type { CustomModalProps } from \"./CustomModal\"\nexport type { ModalHeaderProps } from \"./ModalHeader\"\nexport type { ModalFooterProps } from \"./ModalFooter\"\n\nconst Modal = Object.assign(ModalBase, {\n  alert: (config: ModalProps) => open(ModalBase, withAlert(config)),\n  confirm: (config: ModalProps) => open(ModalBase, withConfirm(config)),\n  Dialog: ModalDialog,\n  Header: ModalHeader,\n  Body: ModalBody,\n  Footer: ModalFooter,\n})\n\nexport { CustomModal }\nexport default Modal\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ForgotPassword_wrapper__NjA--\",\"title\":\"ForgotPassword_title__Iui0U\",\"input-box-group\":\"ForgotPassword_input-box-group__6ht+D\",\"msg\":\"ForgotPassword_msg__5YJ6N\"};","import { useState, useRef } from \"react\"\nimport Backdrop from \"components/Layout/Backdrop\"\nimport Header from \"components/Layout/Header\"\nimport Form, { Append, InputGroup } from \"components/Form\"\nimport Button from \"components/Button\"\nimport Icon from \"components/Icon\"\nimport Modal from \"components/Modal\"\nimport { SubmitHandler, useForm } from \"react-hook-form\"\nimport { sentResetPassword } from \"firebaseClient\"\nimport styled from \"./ForgotPassword.module.scss\"\nimport { useNavigate } from \"react-router-dom\"\n\ntype Inputs = {\n  email: string\n}\n\nconst ForgotPassword = () => {\n  const navigate = useNavigate()\n  const [open, setOpen] = useState(false)\n  const submitSuccessRef = useRef(false)\n\n  const {\n    register,\n    reset,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n  } = useForm<Inputs>({\n    mode: \"all\",\n  })\n\n  const isValidEmail = (email: string) =>\n    // eslint-disable-next-line no-useless-escape\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n      email,\n    )\n\n  const onSubmit: SubmitHandler<Inputs> = async data => {\n    try {\n      await sentResetPassword(data.email)\n      submitSuccessRef.current = true\n    } catch {\n      submitSuccessRef.current = false\n    }\n    setOpen(true)\n  }\n  return (\n    <>\n      <Header leftArrow />\n      <Backdrop className={styled.wrapper}>\n        <div className={styled.title}>忘記密碼</div>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group layout=\"vertical\">\n            <Form.Label>信箱</Form.Label>\n            <InputGroup className={styled[\"input-box-group\"]}>\n              <Form.Input\n                className={styled[\"input-box\"]}\n                autoComplete=\"off\"\n                {...register(\"email\", {\n                  required: true,\n                  validate: (email: string) => isValidEmail(email),\n                })}\n                {...(errors?.email?.type &&\n                  ([\"required\", \"validate\"].some(el => el === errors?.email?.type)\n                    ? { variant: \"invalid\" }\n                    : { variant: \"valid\" }))}\n                placeholder=\"example@gmail.com\"\n              />\n              <Append>\n                {errors?.email?.type &&\n                  getValues(\"email\") &&\n                  (errors?.email?.type === \"required\" || errors?.email?.type === \"validate\" ? (\n                    <div onClick={() => reset()}>\n                      <Icon name=\"Cross\" />\n                    </div>\n                  ) : (\n                    <Icon name=\"Check\" />\n                  ))}\n              </Append>\n            </InputGroup>\n            <div className={styled.msg}>\n              {errors?.email?.type &&\n                (errors?.email?.type === \"required\" || errors?.email?.type === \"validate\" ? (\n                  <Form.ErrorMessage>格式不符合</Form.ErrorMessage>\n                ) : (\n                  <Form.ValidMessage>格式符合</Form.ValidMessage>\n                ))}\n            </div>\n          </Form.Group>\n          <Button type=\"submit\">發送</Button>\n          <Modal\n            title={submitSuccessRef.current ? \"發送成功\" : \"信箱錯誤\"}\n            open={open}\n            confirmText=\"關閉\"\n            onClose={() => {\n              setOpen(false)\n              navigate(-1)\n            }}>\n            {submitSuccessRef.current ? \"請至註冊信箱查收新密碼\" : \"錯誤提示文字\"}\n          </Modal>\n        </Form>\n      </Backdrop>\n    </>\n  )\n}\nexport default ForgotPassword\n"],"names":["variant","className","selected","children","eventKey","onClick","props","cx","styled","style","e","navigate","useNavigate","text","useParams","title","leftArrow","redirect","Icon","name","open","backdrop","modal","nested","lockScroll","closeOnDocumentClick","closeOnEscape","onClose","contentStyle","background","border","width","overlayStyle","backgroundColor","content","cancelText","onCancel","cancelButtonProps","disabled","confirmText","onConfirm","confirmButtonProps","Modal","config","modalRoot","popupRoot","document","getElementById","createElement","setAttribute","body","appendChild","getPopupRoot","modalDiv","render","ReactDOM","theOtherConfig","bind","fn","close","bindClose","destroy","update","newConfig","Object","assign","ModalBase","alert","withAlert","confirm","withConfirm","Dialog","ModalDialog","Header","ModalHeader","Body","ModalBody","Footer","ModalFooter","useState","setOpen","submitSuccessRef","useRef","useForm","mode","register","reset","handleSubmit","getValues","errors","formState","onSubmit","data","sentResetPassword","email","current","Backdrop","Form","layout","autoComplete","required","validate","test","isValidEmail","type","some","el","placeholder","Button"],"sourceRoot":""}